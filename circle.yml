general:
  branches:
    ignore:
      - gh-pages
  artifacts:
    - "artifacts/"

machine:
  node:
    version: 6

dependencies:
  cache_directories:
    - "~/.cache/yarn"

  override:
    - which node

    # install dependencies
    - ./scripts/bootstrap-env-ubuntu.sh

    - yarn install
    - yarn build

test:
  override:
    - node -v
    - >
      if [ "$CIRCLE_BRANCH" == 'master' ]; then
        ./scripts/set-dev-version.js
      fi;
    - node ./bin/yarn.js lint
    - node ./bin/yarn.js test-only
    - node ./bin/yarn.js check-lockfile
    - node ./bin/yarn.js run build-dist
    - node ./bin/yarn.js run build-deb
    # Test that the standalone .js build works as expected
    - ./artifacts/yarn-`./dist/bin/yarn --version`.js --version
    - ./artifacts/yarn-legacy-`./dist/bin/yarn --version`.js --version

    # Test that installing as root works and that it also works
    # behind a user namespace which Circle CI tests are run under
    - sudo env "PATH=$PATH" bin/yarn install --force

deployment:
  release:
    tag: /v[0-9]+(\.[0-9]+)*/
    owner: yarnpkg
    commands:
      # Only NPM is handled here - All other release files are handled in a webhook.
      - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - ./scripts/set-installation-method.js "`pwd`/package.json" npm
      # https://github.com/yarnpkg/yarn/issues/610, need to make yarn publish noninteractive
      - npm publish --tag rc

notify:
  webhooks:
    # Handles uploading stable/RC releases to GitHub
    - url: https://nightly.yarnpkg.com/release_circleci
    # Handles archiving all builds onto the nightly build site
    - url: https://nightly.yarnpkg.com/archive_circleci
