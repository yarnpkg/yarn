HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:54 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d14b9e5f65bbd1526d3f3bc18e4dddf811476262734; expires=Thu, 12-Oct-17 08:58:54 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"96F2MWOCCVHNN0OCL8XHCZLIK"
Cache-Control: public, max-age=14400
Via: 1.1 varnish
X-Served-By: cache-lcy1127-LCY
X-Cache: HIT
X-Cache-Hits: 3
X-Timer: S1476257754.769817,VS0,VE0
Vary: Accept-Encoding
CF-Cache-Status: HIT
Expires: Wed, 12 Oct 2016 12:58:54 GMT
Server: cloudflare-nginx
CF-RAY: 2f095a4a0b3506fa-LHR

3d92
{"_id":"ipaddr.js","_rev":"34-c0b28c24a130acd1d43053ee6f964fc3","name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","dist-tags":{"latest":"1.2.0"},"versions":{"0.1.0":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.0","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{"coffee-script":">= 1.1.1"},"devDependencies":{"nodeunit":"0.5.3","uglify-js":"latest"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js.git"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"_npmJsonOpts":{"file":"/home/whitequark/.npm/ipaddr.js/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"ipaddr.js@0.1.0","_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.9","_defaultsLoaded":true,"dist":{"shasum":"d67fc6dcc153b15a8ed475a44158f854728b037e","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.0.tgz"},"scripts":{}},"0.1.1":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.1","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{"coffee-script":">= 1.1.1"},"devDependencies":{"nodeunit":"0.5.3","uglify-js":"latest"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js.git"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"_npmJsonOpts":{"file":"/home/whitequark/.npm/ipaddr.js/0.1.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"ipaddr.js@0.1.1","_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"28c6a7c116a021c555544f906ab1ad540b1d635a","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.1.tgz"},"scripts":{}},"0.1.2":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.2","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.2","dist":{"shasum":"6a1fd3d854f5002965c34d7bbcd9b4a8d4b0467e","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.2.tgz"},"_from":".","_npmVersion":"1.3.10","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}]},"0.1.3":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.3","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.3","dist":{"shasum":"27a9ca37f148d2102b0ef191ccbf2c51a8f025c6","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.3.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}]},"0.1.4":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.4","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"gitHead":"9119cbbda8189888e326e003560694f77692c624","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.4","_shasum":"67b1956263daa9725b507700603b401013d2158c","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"67b1956263daa9725b507700603b401013d2158c","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.4.tgz"}},"0.1.5":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.5","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"gitHead":"5914ebd176f5333977f68ce372cc247f13de2a35","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.5","_shasum":"33d2693c95fbd4715165328dbfe25fb4fb5bbed8","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"33d2693c95fbd4715165328dbfe25fb4fb5bbed8","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.5.tgz"}},"0.1.6":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.6","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"87595aade23e18114b05efa09e1d46ea2ef20c12","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.6","_shasum":"8f0530b217993873025fd4b72bdfd69bc56a9a12","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"8f0530b217993873025fd4b72bdfd69bc56a9a12","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.6.tgz"}},"0.1.7":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.7","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"5c3e47429c1497d47caeb81e76c99d82da87d4cf","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.7","_shasum":"c08aaab60273d6c041e58f0dd2dafad3d43ea40f","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"c08aaab60273d6c041e58f0dd2dafad3d43ea40f","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.7.tgz"}},"0.1.8":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.8","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"3099dba20984caa73a83864ee582548413a425d8","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.8","_shasum":"27442eda77b626c44724b4aa8a1867e8410579ee","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"27442eda77b626c44724b4aa8a1867e8410579ee","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.8.tgz"}},"0.1.9":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"0.1.9","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"d51df7aa41ef1875215ae4ffbd324c486f8c2799","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@0.1.9","_shasum":"a9c78ccc12dc9010f296ab9aef2f61f432d69efa","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"a9c78ccc12dc9010f296ab9aef2f61f432d69efa","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-0.1.9.tgz"}},"1.0.0":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.0.0","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"f8ee5ce11cd4f1f940903671808505dfe02ce90a","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.0.0","_shasum":"dc6723c4f83913106a6702113a2034696ec03469","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"dc6723c4f83913106a6702113a2034696ec03469","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.0.0.tgz"}},"1.0.1":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.0.1","author":{"name":"Peter Zotov","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"0a5a26d9317a58d67047e7f32b5b1bbe7f2f7fbf","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.0.1","_shasum":"5f38801dc73e0400fc7076386f6ed5215fbd8f95","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"5f38801dc73e0400fc7076386f6ed5215fbd8f95","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.0.1.tgz"}},"1.0.3":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.0.3","author":{"name":"whitequark","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":"~0.5.3","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.2.5"},"license":"MIT","gitHead":"bf26b1f5d00cf8526a54f79db994eea3e8526e10","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.0.3","_shasum":"2a9df7be73ea92aadb0d7f377497decd8e6d01bb","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"2a9df7be73ea92aadb0d7f377497decd8e6d01bb","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.0.3.tgz"}},"1.0.4":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.0.4","author":{"name":"whitequark","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":">=0.8.2 <0.8.7","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.10"},"license":"MIT","gitHead":"9885a29dfaab9519e3ec46f99c0bc0b81660a0d9","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.0.4","_shasum":"ef715deab1e923fc1fe8fe9ce7a561d9110e52e2","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"ef715deab1e923fc1fe8fe9ce7a561d9110e52e2","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.0.4.tgz"}},"1.0.5":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.0.5","author":{"name":"whitequark","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":">=0.8.2 <0.8.7","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.10"},"license":"MIT","gitHead":"46438c8bfa187505b7007a277f09a4a9e73d5686","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.0.5","_shasum":"5fa78cf301b825c78abc3042d812723049ea23c7","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"5fa78cf301b825c78abc3042d812723049ea23c7","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.0.5.tgz"}},"1.1.0":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.1.0","author":{"name":"whitequark","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":">=0.8.2 <0.8.7","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/wh
2e95
itequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.10"},"license":"MIT","gitHead":"9afdebb46eaeac3bee4e98c6a5cd731b210cdee8","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.1.0","_shasum":"5fd380584eb3e2d55904dbe3047a2627d4199a14","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"5fd380584eb3e2d55904dbe3047a2627d4199a14","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.1.0.tgz"}},"1.1.1":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.1.1","author":{"name":"whitequark","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":">=0.8.2 <0.8.7","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.10"},"license":"MIT","gitHead":"dbc7d98bc0d8fff68a894be0c60721566807e2fc","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.1.1","_shasum":"c791d95f52b29c1247d5df80ada39b8a73647230","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"c791d95f52b29c1247d5df80ada39b8a73647230","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.1.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ipaddr.js-1.1.1.tgz_1464074293475_0.6683731523808092"}},"1.2.0":{"name":"ipaddr.js","description":"A library for manipulating IPv4 and IPv6 addresses in JavaScript.","version":"1.2.0","author":{"name":"whitequark","email":"whitequark@whitequark.org"},"directories":{"lib":"./lib"},"dependencies":{},"devDependencies":{"coffee-script":"~1.6","nodeunit":">=0.8.2 <0.8.7","uglify-js":"latest"},"scripts":{"test":"cake build test"},"keywords":["ip","ipv4","ipv6"],"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"main":"./lib/ipaddr","engines":{"node":">= 0.10"},"license":"MIT","gitHead":"87bcb487f1a6739101231e71b111da2823540398","bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"_id":"ipaddr.js@1.2.0","_shasum":"8aba49c9192799585bdd643e0ccb50e8ae777ba4","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"whitequark","email":"whitequark@whitequark.org"},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"dist":{"shasum":"8aba49c9192799585bdd643e0ccb50e8ae777ba4","tarball":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.2.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/ipaddr.js-1.2.0.tgz_1467971539814_0.6815996605437249"}}},"maintainers":[{"name":"whitequark","email":"whitequark@whitequark.org"}],"time":{"modified":"2016-07-08T09:52:20.241Z","created":"2011-07-28T15:57:38.697Z","0.1.0":"2011-07-28T15:57:40.643Z","0.1.1":"2011-07-30T16:00:04.710Z","0.1.2":"2013-12-06T22:00:21.923Z","0.1.3":"2014-07-09T08:26:58.804Z","0.1.4":"2014-11-18T22:00:30.596Z","0.1.5":"2014-11-19T21:57:24.625Z","0.1.6":"2014-11-26T16:34:44.619Z","0.1.7":"2015-01-29T03:39:54.325Z","0.1.8":"2015-01-29T23:40:08.892Z","0.1.9":"2015-03-11T10:41:42.690Z","1.0.0":"2015-04-07T21:16:34.839Z","1.0.1":"2015-04-08T17:00:18.304Z","1.0.3":"2015-08-27T06:31:09.446Z","1.0.4":"2015-11-07T05:46:23.340Z","1.0.5":"2015-12-09T14:36:42.259Z","1.1.0":"2016-01-29T22:33:58.126Z","1.1.1":"2016-05-24T07:18:13.893Z","1.2.0":"2016-07-08T09:52:20.241Z"},"author":{"name":"whitequark","email":"whitequark@whitequark.org"},"repository":{"type":"git","url":"git://github.com/whitequark/ipaddr.js"},"readme":"# ipaddr.js — an IPv6 and IPv4 address manipulation library [![Build Status](https://travis-ci.org/whitequark/ipaddr.js.svg)](https://travis-ci.org/whitequark/ipaddr.js)\n\nipaddr.js is a small (1.9K minified and gzipped) library for manipulating\nIP addresses in JavaScript environments. It runs on both CommonJS runtimes\n(e.g. [nodejs]) and in a web browser.\n\nipaddr.js allows you to verify and parse string representation of an IP\naddress, match it against a CIDR range or range list, determine if it falls\ninto some reserved ranges (examples include loopback and private ranges),\nand convert between IPv4 and IPv4-mapped IPv6 addresses.\n\n[nodejs]: http://nodejs.org\n\n## Installation\n\n`npm install ipaddr.js`\n\nor\n\n`bower install ipaddr.js`\n\n## API\n\nipaddr.js defines one object in the global scope: `ipaddr`. In CommonJS,\nit is exported from the module:\n\n```js\nvar ipaddr = require('ipaddr.js');\n```\n\nThe API consists of several global methods and two classes: ipaddr.IPv6 and ipaddr.IPv4.\n\n### Global methods\n\nThere are three global methods defined: `ipaddr.isValid`, `ipaddr.parse` and\n`ipaddr.process`. All of them receive a string as a single parameter.\n\nThe `ipaddr.isValid` method returns `true` if the address is a valid IPv4 or\nIPv6 address, and `false` otherwise. It does not throw any exceptions.\n\nThe `ipaddr.parse` method returns an object representing the IP address,\nor throws an `Error` if the passed string is not a valid representation of an\nIP address.\n\nThe `ipaddr.process` method works just like the `ipaddr.parse` one, but it\nautomatically converts IPv4-mapped IPv6 addresses to their IPv4 couterparts\nbefore returning. It is useful when you have a Node.js instance listening\non an IPv6 socket, and the `net.ivp6.bindv6only` sysctl parameter (or its\nequivalent on non-Linux OS) is set to 0. In this case, you can accept IPv4\nconnections on your IPv6-only socket, but the remote address will be mangled.\nUse `ipaddr.process` method to automatically demangle it.\n\n### Object representation\n\nParsing methods return an object which descends from `ipaddr.IPv6` or\n`ipaddr.IPv4`. These objects share some properties, but most of them differ.\n\n#### Shared properties\n\nOne can determine the type of address by calling `addr.kind()`. It will return\neither `\"ipv6\"` or `\"ipv4\"`.\n\nAn address can be converted back to its string representation with `addr.toString()`.\nNote that this method:\n * does not return the original string used to create the object (in fact, there is\n   no way of getting that string)\n * returns a compact representation (when it is applicable)\n\nA `match(range, bits)` method can be used to check if the address falls into a\ncertain CIDR range.\nNote that an address can be (obviously) matched only against an address of the same type.\n\nFor example:\n\n```js\nvar addr = ipaddr.parse(\"2001:db8:1234::1\");\nvar range = ipaddr.parse(\"2001:db8::\");\n\naddr.match(range, 32); // => true\n```\n\nAlternatively, `match` can also be called as `match([range, bits])`. In this way,\nit can be used together with the `parseCIDR(string)` method, which parses an IP\naddress together with a CIDR range.\n\nFor example:\n\n```js\nvar addr = ipaddr.parse(\"2001:db8:1234::1\");\n\naddr.match(ipaddr.parseCIDR(\"2001:db8::/32\")); // => true\n```\n\nA `range()` method returns one of predefined names for several special ranges defined\nby IP protocols. The exact names (and their respective CIDR ranges) can be looked up\nin the source: [IPv6 ranges] and [IPv4 ranges]. Some common ones include `\"unicast\"`\n(the default one) and `\"reserved\"`.\n\nYou can match against your own range list by using\n`ipaddr.subnetMatch(address, rangeList, defaultName)` method. It can work with both\nIPv6 and IPv4 addresses, and accepts a name-to-subnet map as the range list. For example:\n\n```js\nvar rangeList = {\n  documentationOnly: [ ipaddr.parse('2001:db8::'), 32 ],\n  tunnelProviders: [\n    [ ipaddr.parse('2001:470::'), 32 ], // he.net\n    [ ipaddr.parse('2001:5c0::'), 32 ]  // freenet6\n  ]\n};\nipaddr.subnetMatch(ipaddr.parse('2001:470:8:66::1'), rangeList, 'unknown'); // => \"he.net\"\n```\n\nThe addresses can be converted to their byte representation with `toByteArray()`.\n(Actually, JavaScript mostly does not know about byte buffers. They are emulated with\narrays of numbers, each in range of 0..255.)\n\n```js\nvar bytes = ipaddr.parse('2a00:1450:8007::68').toByteArray(); // ipv6.google.com\nbytes // => [42, 0x00, 0x14, 0x50, 0x80, 0x07, 0x00, <zeroes...>, 0x00, 0x68 ]\n```\n\nThe `ipaddr.IPv4` and `ipaddr.IPv6` objects have some methods defined, too. All of them\nhave the same interface for both protocols, and are similar to global methods.\n\n`ipaddr.IPvX.isValid(string)` can be used to check if the string is a valid address\nfor particular protocol, and `ipaddr.IPvX.parse(string)` is the error-throwing parser.\n\n`ipaddr.IPvX.isValid(string)` uses the same format for parsing as the POSIX `inet_ntoa` function, which accepts unusual formats like `0xc0.168.1.1` or `0x10000000`. The function `ipaddr.IPv4.isValidFourPartDecimal(string)` validates the IPv4 address and also ensures that it is written in four-part decimal format.\n\n[IPv6 ranges]: https://github.com/whitequark/ipaddr.js/blob/master/src/ipaddr.coffee#L186\n[IPv4 ranges]: https://github.com/whitequark/ipaddr.js/blob/master/src/ipaddr.coffee#L71\n\n#### IPv6 properties\n\nSometimes you will want to convert IPv6 not to a compact string representation (with\nthe `::` substitution); the `toNormalizedString()` method will return an address where\nall zeroes are explicit.\n\nFor example:\n\n```js\nvar addr = ipaddr.parse(\"2001:0db8::0001\");\naddr.toString(); // => \"2001:db8::1\"\naddr.toNormalizedString(); // => \"2001:db8:0:0:0:0:0:1\"\n```\n\nThe `isIPv4MappedAddress()` method will return `true` if this address is an IPv4-mapped\none, and `toIPv4Address()` will return an IPv4 object address.\n\nTo access the underlying binary representation of the address, use `addr.parts`.\n\n```js\nvar addr = ipaddr.parse(\"2001:db8:10::1234:DEAD\");\naddr.parts // => [0x2001, 0xdb8, 0x10, 0, 0, 0, 0x1234, 0xdead]\n```\n\n#### IPv4 properties\n\n`toIPv4MappedAddress()` will return a corresponding IPv4-mapped IPv6 address.\n\nTo access the underlying representation of the address, use `addr.octets`.\n\n```js\nvar addr = ipaddr.parse(\"192.168.1.1\");\naddr.octets // => [192, 168, 1, 1]\n```\n\n`prefixLengthFromSubnetMask()` will return a CIDR prefix length for a valid IPv4 netmask or\nfalse if the netmask is not valid.\n\n```js\nipaddr.IPv4.parse('255.255.255.240').prefixLengthFromSubnetMask() == 28\nipaddr.IPv4.parse('255.192.164.0').prefixLengthFromSubnetMask()  == null\n```\n\n#### Conversion\n\nIPv4 and IPv6 can be converted bidirectionally to and from network byte order (MSB) byte arrays.\n\nThe `fromByteArray()` method will take an array and create an appropriate IPv4 or IPv6 object\nif the input satisfies the requirements. For IPv4 it has to be an array of four 8-bit values,\nwhile for IPv6 it has to be an array of sixteen 8-bit values.\n\nFor example:\n```js\nvar addr = ipaddr.fromByteArray([0x7f, 0, 0, 1]);\naddr.toString(); // => \"127.0.0.1\"\n```\n\nor\n\n```js\nvar addr = ipaddr.fromByteArray([0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\naddr.toString(); // => \"2001:db8::1\"\n```\n\nBoth objects also offer a `toByteArray()` method, which returns an array in network byte order (MSB).\n\nFor example:\n```js\nvar addr = ipaddr.parse(\"127.0.0.1\");\naddr.toByteArray(); // => [0x7f, 0, 0, 1]\n```\n\nor\n\n```js\nvar addr = ipaddr.parse(\"2001:db8::1\");\naddr.toByteArray(); // => [0x20, 1, 0xd, 0xb8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n```\n","keywords":["ip","ipv4","ipv6"],"bugs":{"url":"https://github.com/whitequark/ipaddr.js/issues"},"readmeFilename":"README.md","license":"MIT","users":{"msmiley":true,"qlqllu":true,"subchen":true,"bacra":true},"_attachments":{}}
0

