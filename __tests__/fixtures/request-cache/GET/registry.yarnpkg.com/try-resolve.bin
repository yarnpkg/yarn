HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:49 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=da3615842cac8bb51193c9a0c24323d4e1476262729; expires=Thu, 12-Oct-17 08:58:49 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"5BB3CEL65O3A216DZOYCKKRGS"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 25
X-Served-By: cache-lcy1127-LCY
X-Cache: HIT
X-Cache-Hits: 1
X-Timer: S1476262729.886053,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f095a2dcef83614-LHR

c29
{"_id":"try-resolve","_rev":"2-2c3dc94563d8bf148b4d8d0298f0ec88","name":"try-resolve","description":"Try and resolve a filename","dist-tags":{"latest":"1.0.1"},"versions":{"1.0.0":{"name":"try-resolve","version":"1.0.0","description":"Try and resolve a filename","main":"index.js","repository":{"type":"git","url":"git+https://github.com/sebmck/try-resolve.git"},"author":{"name":"Sebastian McKenzie","email":"sebmck@gmail.com"},"license":"MIT","gitHead":"5a4853d1a18bf8519bfcaa56bb95aa25dec79b4c","bugs":{"url":"https://github.com/sebmck/try-resolve/issues"},"homepage":"https://github.com/sebmck/try-resolve#readme","_id":"try-resolve@1.0.0","scripts":{},"_shasum":"4ad015f89e56b209a2ad527b2394defbf8ddc258","_from":".","_npmVersion":"2.12.1","_nodeVersion":"2.3.4","_npmUser":{"name":"sebmck","email":"sebmck@gmail.com"},"maintainers":[{"name":"sebmck","email":"sebmck@gmail.com"}],"dist":{"shasum":"4ad015f89e56b209a2ad527b2394defbf8ddc258","tarball":"https://registry.npmjs.org/try-resolve/-/try-resolve-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"try-resolve","version":"1.0.1","description":"Try and resolve a filename","main":"index.js","repository":{"type":"git","url":"git+https://github.com/sebmck/try-resolve.git"},"author":{"name":"Sebastian McKenzie","email":"sebmck@gmail.com"},"license":"MIT","gitHead":"11f52ddf92dd1abdea9e64edf54d87138a0f610e","bugs":{"url":"https://github.com/sebmck/try-resolve/issues"},"homepage":"https://github.com/sebmck/try-resolve#readme","_id":"try-resolve@1.0.1","scripts":{},"_shasum":"cfde6fabd72d63e5797cfaab873abbe8e700e912","_from":".","_npmVersion":"2.12.1","_nodeVersion":"2.3.4","_npmUser":{"name":"sebmck","email":"sebmck@gmail.com"},"maintainers":[{"name":"sebmck","email":"sebmck@gmail.com"}],"dist":{"shasum":"cfde6fabd72d63e5797cfaab873abbe8e700e912","tarball":"https://registry.npmjs.org/try-resolve/-/try-resolve-1.0.1.tgz"},"directories":{}}},"readme":"# try-resolve\n\n## Installation\n\n```sh\n$ npm install try-resolve\n```\n\n## Usage\n\n```javascrpt\nvar resolve = require(\"try-resolve\");\n```\n\n### `resolve(filename, [require])`\n\n - `filename` is a filename to be resolved.\n - `require` is an optional instance of the `require` function from any file.\n\nReturns `null` if the file can't be required, otherwise it returns an absolute filename string.\n\n#### Example\n\n```javascript\nif (require(\"try-resolve\")(\"/home/sebastian/file\")) {\n  // this file can be required\n} else {\n  // it can't\n}\n```\n\n### `resolve.relative(filename)`\n\nResolve a filename relative to the cwd.\n","maintainers":[{"name":"sebmck","email":"sebmck@gmail.com"}],"time":{"modified":"2015-07-25T01:50:28.780Z","created":"2015-07-25T01:45:50.857Z","1.0.0":"2015-07-25T01:45:50.857Z","1.0.1":"2015-07-25T01:50:28.780Z"},"homepage":"https://github.com/sebmck/try-resolve#readme","repository":{"type":"git","url":"git+https://github.com/sebmck/try-resolve.git"},"author":{"name":"Sebastian McKenzie","email":"sebmck@gmail.com"},"bugs":{"url":"https://github.com/sebmck/try-resolve/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}
0

