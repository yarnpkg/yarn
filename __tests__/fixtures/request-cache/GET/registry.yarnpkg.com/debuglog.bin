HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:56 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d692df1093fefc7a72b2a33a47f1659a21476262736; expires=Thu, 12-Oct-17 08:58:56 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"EMINQW3YQB7RN00UGQ467035K"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 98
X-Served-By: cache-lcy1125-LCY
X-Cache: HIT
X-Cache-Hits: 1
X-Timer: S1476262736.381627,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f095a56683834d6-LHR

1abe
{"_id":"debuglog","_rev":"24-8a356904aea255e1595bb640957271bb","name":"debuglog","description":"backport of util.debuglog from node v0.11","dist-tags":{"latest":"1.0.1"},"versions":{"0.0.1":{"name":"debuglog","version":"0.0.1","description":"backport of util.debuglog from node v0.11","license":"MIT","main":"debuglog.js","repository":{"type":"git","url":"https://github.com/sam-github/debuglog.git"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/sam-github/debuglog/issues"},"_id":"debuglog@0.0.1","dist":{"shasum":"fb1fd676217dcb4e1ba0deeb8efc092de61ae96d","tarball":"https://registry.npmjs.org/debuglog/-/debuglog-0.0.1.tgz"},"_from":".","_npmVersion":"1.2.23","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"directories":{}},"0.0.2":{"name":"debuglog","version":"0.0.2","description":"backport of util.debuglog from node v0.11","license":"MIT","main":"debuglog.js","repository":{"type":"git","url":"https://github.com/sam-github/node-debuglog.git"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/sam-github/node-debuglog/issues"},"_id":"debuglog@0.0.2","dist":{"shasum":"6c0dcf07e2c3f74524629b741668bd46c7b362eb","tarball":"https://registry.npmjs.org/debuglog/-/debuglog-0.0.2.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"directories":{}},"0.0.3":{"name":"debuglog","version":"0.0.3","description":"backport of util.debuglog from node v0.11","license":[{"name":"StrongLoop","url":"http://strongloop.com/license/"},"MIT"],"main":"debuglog.js","repository":{"type":"git","url":"https://github.com/sam-github/node-debuglog.git"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/sam-github/node-debuglog/issues"},"homepage":"https://github.com/sam-github/node-debuglog","_id":"debuglog@0.0.3","dist":{"shasum":"9944a196d9adf267029db460b4ce1d70b54e8a82","tarball":"https://registry.npmjs.org/debuglog/-/debuglog-0.0.3.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"directories":{}},"0.0.4":{"name":"debuglog","version":"0.0.4","description":"backport of util.debuglog from node v0.11","license":[{"name":"StrongLoop + MIT","url":"http://strongloop.com/license/"},"MIT"],"main":"debuglog.js","repository":{"type":"git","url":"https://github.com/sam-github/node-debuglog.git"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/sam-github/node-debuglog/issues"},"homepage":"https://github.com/sam-github/node-debuglog","_id":"debuglog@0.0.4","dist":{"shasum":"0e705fb949f085aa0aa4d7333640661d060fee17","tarball":"https://registry.npmjs.org/debuglog/-/debuglog-0.0.4.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"directories":{}},"1.0.0":{"name":"debuglog","version":"1.0.0","description":"backport of util.debuglog from node v0.11","license":"MIT","main":"debuglog.js","repository":{"type":"git","url":"https://github.com/sam-github/node-debuglog.git"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/sam-github/node-debuglog/issues"},"homepage":"https://github.com/sam-github/node-debuglog","_id":"debuglog@1.0.0","dist":{"shasum":"da572fd764f3884679e570d226e1489e0f0015af","tarball":"https://registry.npmjs.org/debuglog/-/debuglog-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"directories":{}},"1.0.1":{"name":"debuglog","version":"1.0.1","description":"backport of util.debuglog from node v0.11","license":"MIT","main":"debuglog.js","repository":{"type":"git","url":"https://github.com/sam-github/node-debuglog.git"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"engines":{"node":"*"},"browser":{"util":false},"bugs":{"url":"https://github.com/sam-github/node-debuglog/issues"},"homepage":"https://github.com/sam-github/node-debuglog","_id":"debuglog@1.0.1","dist":{"shasum":"aa24ffb9ac3df9a2351837cfb2d279360cd78492","tarball":"https://registry.npmjs.org/debuglog/-/debuglog-1.0.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"octet","email":"sam@strongloop.com"},"maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"directories":{}}},"readme":"# debuglog - backport of util.debuglog() from node v0.11\n\nTo facilitate using the `util.debuglog()` function that will be available when\nnode v0.12 is released now, this is a copy extracted from the source.\n\n## require('debuglog')\n\nReturn `util.debuglog`, if it exists, otherwise it will return an internal copy\nof the implementation from node v0.11.\n\n## debuglog(section)\n\n* `section` {String} The section of the program to be debugged\n* Returns: {Function} The logging function\n\nThis is used to create a function which conditionally writes to stderr\nbased on the existence of a `NODE_DEBUG` environment variable.  If the\n`section` name appears in that environment variable, then the returned\nfunction will be similar to `console.error()`.  If not, then the\nreturned function is a no-op.\n\nFor example:\n\n```javascript\nvar debuglog = util.debuglog('foo');\n\nvar bar = 123;\ndebuglog('hello from foo [%d]', bar);\n```\n\nIf this program is run with `NODE_DEBUG=foo` in the environment, then\nit will output something like:\n\n    FOO 3245: hello from foo [123]\n\nwhere `3245` is the process id.  If it is not run with that\nenvironment variable set, then it will not print anything.\n\nYou may separate multiple `NODE_DEBUG` environment variables with a\ncomma.  For example, `NODE_DEBUG=fs,net,tls`.\n","maintainers":[{"name":"octet","email":"sam@strongloop.com"}],"time":{"modified":"2015-08-05T21:05:15.752Z","created":"2013-07-05T00:17:31.535Z","0.0.1":"2013-07-05T00:17:35.488Z","0.0.2":"2013-10-29T15:41:31.897Z","0.0.3":"2014-02-13T20:12:45.275Z","0.0.4":"2014-02-13T20:22:35.900Z","1.0.0":"2014-02-13T23:23:45.790Z","1.0.1":"2014-03-05T18:14:59.972Z"},"author":{"name":"Sam Roberts","email":"sam@strongloop.com"},"repository":{"type":"git","url":"https://github.com/sam-github/node-debuglog.git"},"readmeFilename":"README.md","homepage":"https://github.com/sam-github/node-debuglog","bugs":{"url":"https://github.com/sam-github/node-debuglog/issues"},"license":"MIT","users":{"garthk":true,"prabhash1785":true,"j.su":true},"_attachments":{}}
0

