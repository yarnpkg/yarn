HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:56 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d74c2a14e661ca6aae81637b8a41523f51476262736; expires=Thu, 12-Oct-17 08:58:56 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"DLXH9ZP1T65IHOL5WJK3N8NBU"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 290
X-Served-By: cache-lcy1130-LCY
X-Cache: HIT
X-Cache-Hits: 13
X-Timer: S1476262736.910735,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f095a59aadb0a8a-LHR

200e
{"_id":"stringset","_rev":"8-cffb4f9d4d91aca740d472c3ade1b86b","name":"stringset","description":"fast and robust stringset","dist-tags":{"latest":"0.2.1"},"versions":{"0.1.0":{"name":"stringset","version":"0.1.0","description":"fast and robust stringset","main":"stringset.js","repository":{"type":"git","url":"https://github.com/olov/stringset.git"},"keywords":["stringset","set","__proto__"],"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"license":"MIT","readme":"# stringset.js\nA fast and robust stringset implementation that can hold any string items,\nincluding `__proto__`, with minimal overhead compared to a plain object.\nWorks in node and browsers.\n\n\n\n## Examples\nAvailable in `examples.js`\n\n```javascript\nvar StringSet = require(\"./stringset\");\n\nvar ss1 = new StringSet();\nss1.add(\"greeting\");\nss1.add(\"check\");\nss1.add(\"__proto__\");\nconsole.log(ss1.has(\"greeting\")); // true\nconsole.log(ss1.has(\"__proto__\")); // true\nss1.delete(\"greeting\");\nconsole.log(ss1.items()); // [ 'check', '__proto__' ]\nconsole.log(ss1.toString()); // {\"check\",\"__proto__\"}\n\nvar ss2 = new StringSet([\"one\", \"two\"]);\nconsole.log(ss2.isEmpty()); // false\nconsole.log(ss2.size()); // 2\n\nvar ss3 = ss1.clone();\nss3.merge(ss2);\nss3.addMany([\"a\", \"b\"]);\nconsole.log(ss3.toString()); // {\"check\",\"one\",\"two\",\"a\",\"b\",\"__proto__\"}\n```\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install stringset\n\n```javascript\nvar StringSet = require(\"stringset\");\n```\n\n### Browser\nClone the repo, include it in a script tag. You may want an ES5 polyfill.\n\n    git clone https://github.com/olov/stringset.git\n\n```html\n<script src=\"stringset/stringset.js\"></script>\n```\n","readmeFilename":"README.md","_id":"stringset@0.1.0","dist":{"shasum":"cd3ab78a5abe6facf3d67ee62cb70cb636b247f0","tarball":"https://registry.npmjs.org/stringset/-/stringset-0.1.0.tgz"},"_resolved":"stringset.tgz","_from":"stringset.tgz","scripts":{},"_npmVersion":"1.2.18","_npmUser":{"name":"olov","email":"olov.lassus@gmail.com"},"maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}],"directories":{}},"0.2.0":{"name":"stringset","version":"0.2.0","description":"fast and robust stringset","main":"stringset.js","repository":{"type":"git","url":"https://github.com/olov/stringset.git"},"keywords":["stringset","set","__proto__"],"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"license":"MIT","readme":"# stringset.js\nA fast and robust stringset implementation that can hold any string items,\nincluding `__proto__`, with minimal overhead compared to a plain object.\nWorks in node and browsers.\n\n\n\n## Examples\nAvailable in `examples.js`\n\n```javascript\nvar StringSet = require(\"stringset\");\n\nvar ss1 = new StringSet();\nss1.add(\"greeting\");\nss1.add(\"check\");\nss1.add(\"__proto__\");\nconsole.log(ss1.has(\"greeting\")); // true\nconsole.log(ss1.has(\"__proto__\")); // true\nss1.delete(\"greeting\");\nconsole.log(ss1.items()); // [ 'check', '__proto__' ]\nconsole.log(ss1.toString()); // {\"check\",\"__proto__\"}\n\nvar ss2 = new StringSet([\"one\", \"two\"]);\nconsole.log(ss2.isEmpty()); // false\nconsole.log(ss2.size()); // 2\n\nvar ss3 = ss1.clone();\nss3.merge(ss2);\nss3.addMany([\"a\", \"b\"]);\nconsole.log(ss3.toString()); // {\"check\",\"one\",\"two\",\"a\",\"b\",\"__proto__\"}\n```\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install stringset\n\n```javascript\nvar StringSet = require(\"stringset\");\n```\n\n### Browser\nClone the repo and include it in a script tag\n\n    git clone https://github.com/olov/stringset.git\n\n```html\n<script src=\"stringset/stringset.js\"></script>\n```\n","readmeFilename":"README.md","_id":"stringset@0.2.0","dist":{"shasum":"6fa2f341f85d46e1a5c80dd7ffe41df25548f6b8","tarball":"https://registry.npmjs.org/stringset/-/stringset-0.2.0.tgz"},"_resolved":"../stringset.tgz","_from":"../stringset.tgz","scripts":{},"_npmVersion":"1.2.18","_npmUser":{"name":"olov","email":"olov.lassus@gmail.com"},"maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}],"directories":{}},"0.2.1":{"name":"stringset","version":"0.2.1","description":"fast and robust stringset","main":"stringset.js","repository":{"type":"git","url":"https://github.com/olov/stringset.git"},"keywords":["stringset","set","__proto__"],"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"license":"MIT","readme":"# stringset.js\nA fast and robust stringset implementation that can hold any string items,\nincluding `__proto__`, with minimal overhead compared to a plain object.\nWorks in node and browsers.\n\nThe API is created to be as close to the ES6 Set API as possible. Prefer\n`ss.remove(\"key\")` for deleting a key. ES6 Set uses `set.delete(\"key\")`\ninstead and for that reason `ss['delete'](\"key\")` is available as a\nstringset alias as well. Never do `ss.delete(\"key\")` unless you're\ncertain to be in the land of ES5 or later.\n\n\n\n## Examples\nAvailable in `examples.js`\n\n```javascript\nvar StringSet = require(\"stringset\");\n\nvar ss1 = new StringSet();\nss1.add(\"greeting\");\nss1.add(\"check\");\nss1.add(\"__proto__\");\nconsole.log(ss1.has(\"greeting\")); // true\nconsole.log(ss1.has(\"__proto__\")); // true\nss1.remove(\"greeting\");\nconsole.log(ss1.items()); // [ 'check', '__proto__' ]\nconsole.log(ss1.toString()); // {\"check\",\"__proto__\"}\n\nvar ss2 = new StringSet([\"one\", \"two\"]);\nconsole.log(ss2.isEmpty()); // false\nconsole.log(ss2.size()); // 2\n\nvar ss3 = ss1.clone();\nss3.merge(ss2);\nss3.addMany([\"a\", \"b\"]);\nconsole.log(ss3.toString()); // {\"check\",\"one\",\"two\",\"a\",\"b\",\"__proto__\"}\n```\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install stringset\n\n```javascript\nvar StringSet = require(\"stringset\");\n```\n\n### Browser\nClone the repo and include it in a script tag\n\n    git clone https://github.com/olov/stringset.git\n\n```html\n<script src=\"stringset/stringset.js\"></script>\n```\n","readmeFilename":"README.md","_id":"stringset@0.2.1","dist":{"shasum":"ef259c4e349344377fcd1c913dd2e848c9c042b5","tarball":"https://registry.npmjs.org/stringset/-/stringset-0.2.1.tgz"},"_resolved":"/tmp/stringset.tgz.tgz","_from":"/tmp/stringset.tgz.tgz","scripts":{},"_npmVersion":"1.2.18","_npmUser":{"name":"olov","email":"olov.lassus@gmail.com"},"maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}],"directories":{}}},"readme":"# stringset.js\nA fast and robust stringset implementation that can hold any string items,\nincluding `__proto__`, with minimal overhead compared to a plain object.\nWorks in node and browsers.\n\n\n\n## Examples\nAvailable in `examples.js`\n\n```javascript\nvar StringSet = require(\"./stringset\");\n\nvar ss1 = new StringSet();\nss1.add(\"greeting\");\nss1.add(\"check\");\nss1.add(\"__proto__\");\nconsole.log(ss1.has(\"greeting\")); // true\nconsole.log(ss1.has(\"__proto__\")); // true\nss1.delete(\"greeting\");\nconsole.log(ss1.items()); // [ 'check', '__proto__' ]\nconsole.log(ss1.toString()); // {\"check\",\"__proto__\"}\n\nvar ss2 = new StringSet([\"one\", \"two\"]);\nconsole.log(ss2.isEmpty()); // false\nconsole.log(ss2.size()); // 2\n\nvar ss3 = ss1.clone();\nss3.merge(ss2);\nss3.addMany([\"a\", \"b\"]);\nconsole.log(ss3.toString()); // {\"check\",\"one\",\"two\",\"a\",\"b\",\"__proto__\"}\n```\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install stringset\n\n```javascript\nvar StringSet = require(\"stringset\");\n```\n\n### Browser\nClone the repo, include it in a script tag. You may want an ES5 polyfill.\n\n    git clone https://github.com/olov/stringset.git\n\n```html\n<script src=\"stringset/stringset.js\"></script>\n```\n","maintainers":[{"name":"olov","email":"olov.lassus@gmail.com"}],"time":{"modified":"2013-09-26T14:13:59.820Z","created":"2013-04-14T08:28:16.714Z","0.1.0":"2013-04-14T08:28:19.640Z","0.2.0":"2013-04-14T20:29:27.319Z","0.2.1":"2013-09-26T14:13:59.820Z"},"author":{"name":"Olov Lassus","email":"olov.lassus@gmail.com"},"repository":{"type":"git","url":"https://github.com/olov/stringset.git"},"users":{"bojand":true},"_attachments":{}}
0

