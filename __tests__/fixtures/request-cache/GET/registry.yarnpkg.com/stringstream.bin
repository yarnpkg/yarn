HTTP/1.1 200 OK
Date: Fri, 14 Oct 2016 21:05:17 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=dfe575b5641d91b7a630e117d8c2202941476479117; expires=Sat, 14-Oct-17 21:05:17 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"EBUPD6LZKZQ0XKY707YFHY8YL"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 26
X-Served-By: cache-ams4430-AMS
X-Cache: HIT
X-Cache-Hits: 1
X-Timer: S1476479117.219619,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f1dfd129a05146d-AMS

58b
{"_id":"stringstream","_rev":"17-3c3c7ad0f8705adbd816275e57ee112f","name":"stringstream","description":"Encode and decode streams into string streams","dist-tags":{"latest":"0.0.5"},"versions":{"0.0.0":{"name":"stringstream","version":"0.0.0","description":"Encode and decode data streams into string streams","main":"stringstream.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"homepage":"https://github.com/mhart/StringStream","repository":{"url":"https://github.com/mhart/StringStream.git"},"author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com"},"license":"BSD","_id":"stringstream@0.0.0","dist":{"shasum":"4228912fb3a96ca3254b233359df50f9da804e1e","tarball":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.0.tgz"},"maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"directories":{}},"0.0.1":{"name":"stringstream","version":"0.0.1","description":"Encode and decode streams into string streams","main":"stringstream.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"homepage":"https://github.com/mhart/StringStream","repository":{"url":"https://github.com/mhart/StringStream.git"},"author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com"},"license":"BSD","_id":"stringstream@0.0.1","dist":{"shasum":"93c24069089395a0a095222ce032aaf453d71f45","tarball":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.1
13d6
.tgz"},"maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"directories":{}},"0.0.2":{"name":"stringstream","version":"0.0.2","description":"Encode and decode streams into string streams","main":"stringstream.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"homepage":"https://github.com/mhart/StringStream","repository":{"url":"https://github.com/mhart/StringStream.git"},"author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com"},"license":"BSD","_id":"stringstream@0.0.2","dist":{"shasum":"663f1171cd94d7951b14074037a622b92bde8669","tarball":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.2.tgz"},"maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"directories":{}},"0.0.3":{"name":"stringstream","version":"0.0.3","description":"Encode and decode streams into string streams","main":"stringstream.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"homepage":"https://github.com/mhart/StringStream","repository":{"url":"https://github.com/mhart/StringStream.git"},"author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com"},"license":"BSD","_id":"stringstream@0.0.3","dist":{"shasum":"db9412bd6d349058a437dd483dfabc65b4578b48","tarball":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.3.tgz"},"maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"directories":{}},"0.0.4":{"name":"stringstream","version":"0.0.4","description":"Encode and decode streams into string streams","author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com","url":"http://github.com/mhart"},"main":"stringstream.js","keywords":["string","stream","base64","gzip"],"repository":{"type":"git","url":"https://github.com/mhart/StringStream.git"},"license":"MIT","_id":"stringstream@0.0.4","dist":{"shasum":"0f0e3423f942960b5692ac324a57dd093bc41a92","tarball":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.4.tgz"},"_npmVersion":"1.2.0","_npmUser":{"name":"hichaelmart","email":"michael.hart.au@gmail.com"},"maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"directories":{}},"0.0.5":{"name":"stringstream","version":"0.0.5","description":"Encode and decode streams into string streams","author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com","url":"http://github.com/mhart"},"main":"stringstream.js","keywords":["string","stream","base64","gzip"],"repository":{"type":"git","url":"git+https://github.com/mhart/StringStream.git"},"license":"MIT","gitHead":"1efe3bf507bf3a1161f8473908b60e881d41422b","bugs":{"url":"https://github.com/mhart/StringStream/issues"},"homepage":"https://github.com/mhart/StringStream#readme","_id":"stringstream@0.0.5","scripts":{},"_shasum":"4e484cd4de5a0bbbee18e46307710a8a81621878","_from":".","_npmVersion":"2.14.8","_nodeVersion":"4.2.1","_npmUser":{"name":"hichaelmart","email":"michael.hart.au@gmail.com"},"maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"dist":{"shasum":"4e484cd4de5a0bbbee18e46307710a8a81621878","tarball":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz"},"directories":{}}},"readme":"# Decode streams into strings The Right Way(tm)\n\n```javascript\nvar fs   = require('fs')\nvar zlib = require('zlib')\nvar strs = require('stringstream')\n\nvar utf8Stream = fs.createReadStream('massiveLogFile.gz')\n  .pipe(zlib.createGunzip())\n  .pipe(strs('utf8'))\n```\n\nNo need to deal with `setEncoding()` weirdness, just compose streams\nlike they were supposed to be!\n\nHandles input and output encoding:\n\n```javascript\n// Stream from utf8 to hex to base64... Why not, ay.\nvar hex64Stream = fs.createReadStream('myFile')\n  .pipe(strs('utf8', 'hex'))\n  .pipe(strs('hex', 'base64'))\n```\n\nAlso deals with `base64` output correctly by aligning each emitted data\nchunk so that there are no dangling `=` characters:\n\n```javascript\nvar stream = fs.createReadStream('myFile').pipe(strs('base64'))\n\nvar base64Str = ''\n\nstream.on('data', function(data) { base64Str += data })\nstream.on('end', function() {\n  console.log('My base64 encoded file is: ' + base64Str) // Wouldn't work with setEncoding()\n  console.log('Original file is: ' + new Buffer(base64Str, 'base64'))\n})\n```\n","maintainers":[{"name":"hichaelmart","email":"michael.hart.au@gmail.com"}],"time":{"modified":"2015-10-25T23:27:18.102Z","created":"2012-06-23T01:34:19.097Z","0.0.0":"2012-06-23T01:34:23.318Z","0.0.1":"2012-06-23T03:22:41.897Z","0.0.2":"2012-06-24T12:45:44.493Z","0.0.3":"2012-06-27T05:23:45.522Z","0.0.4":"2013-01-21T06:26:03.334Z","0.0.5":"2015-10-25T23:27:18.102Z"},"author":{"name":"Michael Hart","email":"michael.hart.au@gmail.com","url":"http://github.com/mhart"},"repository":{"type":"git","url":"git+https://github.com/mhart/StringStream.git"},"users":{"jakemiller":true},"homepage":"https://github.com/mhart/StringStream#readme","keywords":["string","stream","base64","gzip"],"bugs":{"url":"https://github.com/mhart/StringStream/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}
0

