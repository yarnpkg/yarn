HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:38 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d85dbd4b8eb6f6775ac70950cda1c16dc1476262718; expires=Thu, 12-Oct-17 08:58:38 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"67JI69KUYF8JVVUKN3XMTP24I"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 0
X-Served-By: cache-lcy1127-LCY
X-Cache: HIT
X-Cache-Hits: 1
X-Timer: S1476262718.562240,VS0,VE177
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f0959e6fc500ccb-LHR

1a89
{"_id":"mdurl","_rev":"5-cfea5de6ab94e442cf3b4648b08091ae","name":"mdurl","description":"URL utilities for markdown-it","dist-tags":{"latest":"1.0.1"},"versions":{"0.0.1":{"name":"mdurl","version":"0.0.1","description":"URL utilities for markdown-it","repository":{"type":"git","url":"https://github.com/markdown-it/mdurl"},"license":"MIT","scripts":{"test":"make test"},"devDependencies":{"mocha":"*","eslint":"0.13.0","eslint-plugin-nodeca":"^1.0.0","istanbul":"*"},"gitHead":"291ed8a558eab1faa9461496fc385d41e160277b","bugs":{"url":"https://github.com/markdown-it/mdurl/issues"},"homepage":"https://github.com/markdown-it/mdurl","_id":"mdurl@0.0.1","_shasum":"ac3ba82f95f771533e8ea9cb239441df379591dc","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"vitaly","email":"vitaly@rcdesign.ru"},"maintainers":[{"name":"vitaly","email":"vitaly@rcdesign.ru"}],"dist":{"shasum":"ac3ba82f95f771533e8ea9cb239441df379591dc","tarball":"https://registry.npmjs.org/mdurl/-/mdurl-0.0.1.tgz"},"directories":{}},"1.0.0":{"name":"mdurl","version":"1.0.0","description":"URL utilities for markdown-it","repository":{"type":"git","url":"https://github.com/markdown-it/mdurl"},"license":"MIT","scripts":{"test":"make test"},"devDependencies":{"mocha":"*","eslint":"0.13.0","eslint-plugin-nodeca":"^1.0.0","istanbul":"*"},"gitHead":"5e50f38a2b49f8eafbcaf70b11be34b6e310cfaf","bugs":{"url":"https://github.com/markdown-it/mdurl/issues"},"homepage":"https://github.com/markdown-it/mdurl","_id":"mdurl@1.0.0","_shasum":"307f6d36dbf2777bf0c6278a7101e6f5b05cb2b3","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"vitaly","email":"vitaly@rcdesign.ru"},"maintainers":[{"name":"vitaly","email":"vitaly@rcdesign.ru"}],"dist":{"shasum":"307f6d36dbf2777bf0c6278a7101e6f5b05cb2b3","tarball":"https://registry.npmjs.org/mdurl/-/mdurl-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"mdurl","version":"1.0.1","description":"URL utilities for markdown-it","repository":{"type":"git","url":"git+https://github.com/markdown-it/mdurl.git"},"license":"MIT","scripts":{"test":"make test"},"devDependencies":{"mocha":"*","eslint":"0.13.0","eslint-plugin-nodeca":"^1.0.0","istanbul":"*"},"gitHead":"8bfd33610062a71155cc64254271555a49db8332","bugs":{"url":"https://github.com/markdown-it/mdurl/issues"},"homepage":"https://github.com/markdown-it/mdurl#readme","_id":"mdurl@1.0.1","_shasum":"fe85b2ec75a59037f2adfec100fd6c601761152e","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.4","_npmUser":{"name":"vitaly","email":"vitaly@rcdesign.ru"},"maintainers":[{"name":"vitaly","email":"vitaly@rcdesign.ru"}],"dist":{"shasum":"fe85b2ec75a59037f2adfec100fd6c601761152e","tarball":"https://registry.npmjs.org/mdurl/-/mdurl-1.0.1.tgz"},"directories":{}}},"readme":"# mdurl\n\n[![Build Status](https://img.shields.io/travis/markdown-it/mdurl/master.svg?style=flat)](https://travis-ci.org/markdown-it/mdurl)\n[![NPM version](https://img.shields.io/npm/v/mdurl.svg?style=flat)](https://www.npmjs.org/package/mdurl)\n\n> URL utilities for [markdown-it](https://github.com/markdown-it/markdown-it) parser.\n\n\n## API\n\n### .encode(str [, exclude, keepEncoded]) -> String\n\nPercent-encode a string, avoiding double encoding. Don't touch `/a-zA-Z0-9/` +\nexcluded chars + `/%[a-fA-F0-9]{2}/` (if not disabled). Broken surrorates are\nreplaced with `U+FFFD`.\n\nParams:\n\n- __str__ - input string.\n- __exclude__ - optional, `;/?:@&=+$,-_.!~*'()#`. Additional chars to keep intact\n  (except `/a-zA-Z0-9/`).\n- __keepEncoded__ - optional, `true`. By default it skips already encoded sequences\n  (`/%[a-fA-F0-9]{2}/`). If set to `false`, `%` will be encoded.\n\n\n### encode.defaultChars, encode.componentChars\n\nYou can use these constants as second argument to `encode` function.\n\n - `encode.defaultChars` is the same exclude set as in the standard `encodeURI()` function\n - `encode.componentChars` is the same exclude set as in the `encodeURIComponent()` function\n\nFor example, `encode('something', encode.componentChars, true)` is roughly the equivalent of\nthe `encodeURIComponent()` function (except `encode()` doesn't throw).\n\n\n### .decode(str [, exclude]) -> String\n\nDecode percent-encoded string. Invalid percent-encoded sequences (e.g. `%2G`)\nare left as is. Invalid UTF-8 characters are replaced with `U+FFFD`.\n\n\nParams:\n\n- __str__ - input string.\n- __exclude__ - set of characters to leave encoded, optional, `;/?:@&=+$,#`.\n\n\n### decode.defaultChars, decode.componentChars\n\nYou can use these constants as second argument to `decode` function.\n\n - `decode.defaultChars` is the same exclude set as in the standard `decodeURI()` function\n - `decode.componentChars` is the same exclude set as in the `decodeURIComponent()` function\n\nFor example, `decode('something', decode.defaultChars)` has the same behavior as\n`decodeURI('something')` on a correctly encoded input.\n\n\n### .parse(url, slashesDenoteHost) -> urlObs\n\nParse url string. Similar to node's [url.parse](http://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost), but without any\nnormalizations and query string parse.\n\n - __url__ - input url (string)\n - __slashesDenoteHost__ - if url starts with `//`, expect a hostname after it. Optional, `false`.\n\nResult (hash):\n\n- protocol\n- slashes\n- auth\n- port\n- hostname\n- hash\n- search\n- pathname\n\nDifference with node's `url`:\n\n1. No leading slash in paths, e.g. in `url.parse('http://foo?bar')` pathname is\n   ``, not `/`\n2. Backslashes are not replaced with slashes, so `http:\\\\example.org\\` is\n   treated like a relative path\n3. Trailing colon is treated like a part of the path, i.e. in\n   `http://example.org:foo` pathname is `:foo`\n4. Nothing is URL-encoded in the resulting object, (in joyent/node some chars\n   in auth and paths are encoded)\n5. `url.parse()` does not have `parseQueryString` argument\n6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n   which can be constructed using other parts of the url.\n\n\n### .format(urlObject)\n\nFormat an object previously obtained with `.parse()` function. Similar to node's\n[url.format](http://nodejs.org/api/url.html#url_url_format_urlobj).\n\n\n## License\n\n[MIT](https://github.com/markdown-it/mdurl/blob/master/LICENSE)\n","maintainers":[{"name":"vitaly","email":"vitaly@rcdesign.ru"}],"time":{"modified":"2015-09-14T22:08:28.265Z","created":"2015-03-02T17:13:42.542Z","0.0.1":"2015-03-02T17:13:42.542Z","1.0.0":"2015-03-04T18:57:51.541Z","1.0.1":"2015-09-14T22:08:28.265Z"},"homepage":"https://github.com/markdown-it/mdurl#readme","repository":{"type":"git","url":"git+https://github.com/markdown-it/mdurl.git"},"bugs":{"url":"https://github.com/markdown-it/mdurl/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}
0

