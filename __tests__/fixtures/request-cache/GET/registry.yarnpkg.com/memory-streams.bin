HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:47 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=da9635065017c59764b7ecd4c413941121476262727; expires=Thu, 12-Oct-17 08:58:47 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"7DHQI1KWU5YXZCIPRWPS85J0M"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 255
X-Served-By: cache-lcy1135-LCY
X-Cache: HIT
X-Cache-Hits: 1
X-Timer: S1476262727.791552,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f095a20b9e934a6-LHR

21f0
{"_id":"memory-streams","_rev":"17-af0393fb1e2cbe0beaf18e729a43190c","name":"memory-streams","description":"Simple implmentation of Stream.Readable and Stream.Writable holding the data in memory.","dist-tags":{"latest":"0.1.0"},"versions":{"0.0.1":{"name":"memory-streams","description":"Simple implmentation of Stream.Readable and Stream.Writable holding the data in memory.","version":"0.0.1","author":{"name":"Paul Jackson","url":"http://paulj.me/"},"repository":{"type":"git","url":"git@github.com:paulja/memory-streams-js.git"},"homepage":"https://github.com/paulja/memory-streams-js","main":"index.js","directories":{"test":"test"},"dependencies":{},"devDependencies":{"should":"~1.2.2"},"scripts":{"test":"node ./test/test-readablestream.js && node ./test/test-writablestream.js"},"keywords":["stream","string","memory","Readable","Writable"],"license":"MIT","bugs":{"url":"https://github.com/paulja/memory-streams-js/issues"},"_id":"memory-streams@0.0.1","dist":{"shasum":"b091228391877e1ef5ed1982c29ef82517baf735","tarball":"https://registry.npmjs.org/memory-streams/-/memory-streams-0.0.1.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"paulj","email":"pjackson@gmail.com"},"maintainers":[{"name":"paulj","email":"pjackson@gmail.com"}]},"0.0.2":{"name":"memory-streams","description":"Simple implmentation of Stream.Readable and Stream.Writable holding the data in memory.","version":"0.0.2","author":{"name":"Paul Jackson","url":"http://paulj.me/"},"repository":{"type":"git","url":"git@github.com:paulja/memory-streams-js.git"},"homepage":"https://github.com/paulja/memory-streams-js","main":"index.js","directories":{"test":"test"},"dependencies":{"readable-stream":"~1.0.2"},"devDependencies":{"should":"~1.2.2"},"scripts":{"test":"node ./test/test-readablestream.js && node ./test/test-writablestream.js"},"keywords":["stream","string","memory","Readable","Writable"],"license":"MIT","bugs":{"url":"https://github.com/paulja/memory-streams-js/issues"},"_id":"memory-streams@0.0.2","dist":{"shasum":"da7deda7834c4ca0fdc2e770c3b8eb1294a62866","tarball":"https://registry.npmjs.org/memory-streams/-/memory-streams-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"paulj","email":"pjackson@gmail.com"},"maintainers":[{"name":"paulj","email":"pjackson@gmail.com"}]},"0.0.3":{"name":"memory-streams","description":"Simple implmentation of Stream.Readable and Stream.Writable holding the data in memory.","version":"0.0.3","author":{"name":"Paul Jackson","url":"http://paulj.me/"},"repository":{"type":"git","url":"git@github.com:paulja/memory-streams-js.git"},"homepage":"https://github.com/paulja/memory-streams-js","main":"index.js","directories":{"test":"test"},"dependencies":{"readable-stream":"~1.0.2"},"devDependencies":{"should":"~1.2.2"},"scripts":{"test":"node ./test/test-readablestream.js && node ./test/test-writablestream.js"},"keywords":["stream","string","memory","Readable","Writable"],"license":"MIT","bugs":{"url":"https://github.com/paulja/memory-streams-js/issues"},"_id":"memory-streams@0.0.3","dist":{"shasum":"89a890c39d1f9ba7d1cc54d05f93265dff62bfcd","tarball":"https://registry.npmjs.org/memory-streams/-/memory-streams-0.0.3.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"paulj","email":"pjackson@gmail.com"},"maintainers":[{"name":"paulj","email":"pjackson@gmail.com"}]},"0.1.0":{"name":"memory-streams","description":"Simple implmentation of Stream.Readable and Stream.Writable holding the data in memory.","version":"0.1.0","author":{"name":"Paul Jackson","url":"http://paulj.me/"},"repository":{"type":"git","url":"git@github.com:paulja/memory-streams-js.git"},"homepage":"https://github.com/paulja/memory-streams-js","main":"index.js","directories":{"test":"test"},"dependencies":{"readable-stream":"~1.0.2"},"devDependencies":{"should":"~1.2.2"},"scripts":{"test":"node ./test/test-readablestream.js && node ./test/test-writablestream.js"},"keywords":["stream","string","memory","Readable","Writable"],"license":"MIT","gitHead":"ffc0b4729dd718d7687599a2aa5662bba4f7cd40","bugs":{"url":"https://github.com/paulja/memory-streams-js/issues"},"_id":"memory-streams@0.1.0","_shasum":"bec658a71e3f28b0f0c2f1b14501c2db547d5f7a","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"paulj","email":"pjackson@gmail.com"},"maintainers":[{"name":"paulj","email":"pjackson@gmail.com"}],"dist":{"shasum":"bec658a71e3f28b0f0c2f1b14501c2db547d5f7a","tarball":"https://registry.npmjs.org/memory-streams/-/memory-streams-0.1.0.tgz"}}},"readme":"# Memory Streams JS\n_Memory Streams JS_ is a light-weight implementation of the `Stream.Readable` and `Stream.Writable` abstract classes from node.js. You can use the classes provided to store the result of reading and writing streams in memory. This can be useful when you need pipe your test output for later inspection or to stream files from the web into memory without have to use temporary files on disk.\n\n## Installation\nInstall with:\n   \n    npm install memory-streams --save\n\n## Usage\nSample usage, using the `ReadableStream` class and piping:\n\n    var streams = require('memory-streams');\n    \n    // Initialize with the string\n    var reader = new streams.ReadableStream('Hello World\\n');\n\n    // Send all output to stdout\n    reader.pipe(process.stdout); // outputs: \"Hello World\\n\"\n\n    // Add more data to the stream\n    reader.append('Hello Universe\\n'); // outputs \"Hello Universe\\n\";\n\nUsing the `ReadableStream` class and reading manually:\n\n    var streams = require('memory-streams');\n\n    // Initialize with the string\n    var reader = new streams.ReadableStream('Hello World\\n');\n\n    // Add more data to the stream\n    reader.append('Hello Universe\\n'); // outputs \"Hello Universe\\n\";\n    \n    // Read the data out\n    console.log(reader.toString()); // outputs: \"Hello World\\nHello Universe\\n\"\n    \nUsing the `WritableStream` class and piping the contents of a file:\n\n    var streams = require('memory-streams')\n      , fs      = require('fs');\n\n    // Pipe \n    var reader = fs.createReadStream('index.js');\n    var writer = new streams.WritableStream();\n    reader.pipe(writer);\n    reader.on('readable', function() {\n\n      // Output the content as a string\n      console.log(writer.toString());\n      \n      // Output the content as a Buffer\n      console.log(writer.toBuffer());\n    });\n    \nYou can also call the `write` method directly to store data to the stream:\n\n    var streams = require('memory-streams');\n\n    // Write method\n    var writer = new streams.WritableStream();\n    writer.write('Hello World\\n');\n\n    // Output the content as a string\n    console.log(writer.toString()); // Outputs: \"Hello World\\n\"\n\nFor more examples you can look at the tests for the module.\n\n## License\nMIT\n\nCopyright (c) 2013 Paul Jackson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.","maintainers":[{"name":"paulj","email":"pjackson@gmail.com"}],"time":{"modified":"2014-10-03T07:41:24.400Z","created":"2013-06-06T12:38:26.250Z","0.0.1":"2013-06-06T12:38:29.478Z","0.0.2":"2013-06-07T09:30:37.062Z","0.0.3":"2013-06-28T14:29:15.454Z","0.1.0":"2014-10-03T07:41:24.400Z"},"author":{"name":"Paul Jackson","url":"http://paulj.me/"},"repository":{"type":"git","url":"git@github.com:paulja/memory-streams-js.git"},"users":{"tunnckocore":true,"gliviu":true,"siyb":true,"dereklakin":true,"arttse":true,"diegoperini":true},"homepage":"https://github.com/paulja/memory-streams-js","keywords":["stream","string","memory","Readable","Writable"],"bugs":{"url":"https://github.com/paulja/memory-streams-js/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{}}
0

