HTTP/1.1 200 OK
Date: Fri, 14 Oct 2016 21:04:28 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d20fa67dc2d0739af3ac89380183dabaa1476479067; expires=Sat, 14-Oct-17 21:04:27 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"5ABIHUAF3J470OATH2457OKEO"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 246
X-Served-By: cache-ams4140-AMS
X-Cache: HIT
X-Cache-Hits: 2
X-Timer: S1476479068.009031,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f1dfbdefdc0075b-AMS

3dcf
{"_id":"es5-ext","_rev":"71-8824346c43cd8161a746eccb7e927a98","name":"es5-ext","description":"ECMAScript extensions and shims","dist-tags":{"latest":"0.10.12"},"versions":{"0.1.0":{"name":"es5-ext","version":"0.1.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extension","extensions"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"scripts":{"test":"node test/run"},"dependencies":{},"devDependencies":{},"_id":"es5-ext@0.1.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"16b216b0699c3249c3c62382b350d46611eea0eb","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.1.0.tgz"},"directories":{}},"0.2.0":{"name":"es5-ext","version":"0.2.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"scripts":{"test":"node test/run"},"devDependencies":{"test":"0.1.x","expresso":"0.7.x","jslint":"0.1.x"},"dependencies":{},"_id":"es5-ext@0.2.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"18a7e403db4127b77f0a724ef196ff4edd860856","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.2.0.tgz"},"directories":{}},"0.2.1":{"name":"es5-ext","version":"0.2.1","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"scripts":{"test":"node test/run"},"devDependencies":{"test":"0.1.x","expresso":"0.7.x","jslint":"0.1.x"},"dependencies":{},"_id":"es5-ext@0.2.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"8ba548d826fc81c858e4f71997f6164b4f7eb8fb","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.2.1.tgz"},"directories":{}},"0.3.0":{"name":"es5-ext","version":"0.3.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"dependencies":{},"devDependencies":{},"_id":"es5-ext@0.3.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"4920dd1cec7b4e98cf67d28077cdf3d56adc0581","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.3.0.tgz"},"scripts":{},"directories":{}},"0.4.0":{"name":"es5-ext","version":"0.4.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/es5-ext/0.4.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"es5-ext@0.4.0","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"69dc1d57e2c97485fe58ab662828f7a45a86476f","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.4.0.tgz"},"scripts":{},"directories":{}},"0.5.0":{"name":"es5-ext","version":"0.5.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/es5-ext/0.5.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"es5-ext@0.5.0","dependencies":{},"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"7ef8c2135c1bfc992882d7a6e28b73c58442c225","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.5.0.tgz"},"scripts":{},"directories":{}},"0.5.1":{"name":"es5-ext","version":"0.5.1","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/es5-ext/0.5.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"es5-ext@0.5.1","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"5331943d7aee72dd69b90a8c363119945d54e98f","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.5.1.tgz"},"scripts":{},"directories":{}},"0.6.0":{"name":"es5-ext","version":"0.6.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/es5-ext/0.6.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"es5-ext@0.6.0","dependencies":{},"devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"25aefc7c7261f6f38a62d2364bdd1ac9f677faa4","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.6.0.tgz"},"scripts":{},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.6.1":{"name":"es5-ext","version":"0.6.1","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"scripts":{"test":"./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/es5-ext/0.6.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"es5-ext@0.6.1","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.23","_nodeVersion":"v0.5.4-pre","_defaultsLoaded":true,"dist":{"shasum":"80c91f3e9dc08e17e155b8de452e5dab8d45b566","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.6.1.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.6.2":{"name":"es5-ext","version":"0.6.2","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"scripts":{"test":"./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/es5-ext/0.6.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"es5-ext@0.6.2","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.23","_nodeVersion":"v0.4.10","_defaultsLoaded":true,"dist":{"shasum":"65dfed8b36214e177c83316cc0e6742af2c8c589","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.6.2.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.6.3":{"name":"es5-ext","version":"0.6.3","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib/index","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"scripts":{"test":"./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"es5-ext@0.6.3","dependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-alpha-6","_nodeVersion":"v0.6.5","_defaultsLoaded":true,"dist":{"shasum":"53c14283b92a81474088bd856c021fe186380ba0","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.6.3.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.7.0":{"name":"es5-ext","version":"0.7.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"es5-ext@0.7.0","dependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"1c91f569b16d6667edbb405f6076c2c970635817","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.7.0.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.7.1":{"name":"es5-ext","version":"0.7.1","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.1.103"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"es5-ext@0.7.1","dependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"a66028700ac031842ad55300bcc792abe6c240fe","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.7.1.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.8.0":{"name":"es5-ext","version":"0.8.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript","util","utils","utilities"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","dependencies":{},"optionalDependencies":{},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"es5-ext@0.8.0","_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"954d7794f6e2f6fb9ec9b4a62e4c8bfd567c93ac","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.8.0.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.8.1":{"name":"es5-ext","version":"0.8.1","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript","util","utils","utilities"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","dependencies":{},"optionalDependencies":{},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"es5-ext@0.8.1","_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"5083533c4926afee59f5b71e561d2db5954272a9","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.8.1.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.8.2":{"name":"es5-ext","version":"0.8.2","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript","util","utils","utilities"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","dependencies":{},"optionalDependencies":{},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"es5-ext@0.8.2","_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"aba8d9e1943a895ac96837a62a39b3f55ecd94ab","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.8.2.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.9.0":{"name":"es5-ext","versi
4000
on":"0.9.0","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript","util","utils","utilities"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","dependencies":{},"optionalDependencies":{},"_id":"es5-ext@0.9.0","dist":{"shasum":"b0abf436fb7c87b7e7806d787cf46ed59a7baff3","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.9.0.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.9.1":{"name":"es5-ext","version":"0.9.1","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript","util","utils","utilities"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","dependencies":{},"optionalDependencies":{},"_id":"es5-ext@0.9.1","dist":{"shasum":"02d7f637c07347a12414645c876e98ba1b1904b9","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.9.1.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.9.2":{"name":"es5-ext","version":"0.9.2","description":"ECMAScript5 extensions","keywords":["ecmascript","ecmascript5","es5","extensions","ext","addons","extras","javascript","util","utils","utilities"],"author":{"name":"Mariusz Nowak","email":"medikoo+es5-ext@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"bugs":{"email":"medikoo+es5-ext@medikoo.com","url":"https://github.com/medikoo/es5-ext/issues"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"licence":"MIT","dependencies":{},"optionalDependencies":{},"_id":"es5-ext@0.9.2","dist":{"shasum":"d2e309d1f223b0718648835acf5b8823a8061f8a","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.9.2.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.1":{"name":"es5-ext","version":"0.10.1","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad"},"devDependencies":{"tad":"~0.1.21"},"licence":"MIT","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.1","dist":{"shasum":"8eb6d0eb516b3d652d44c431bb1927e2dd5ee77b","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.1.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.2":{"name":"es5-ext","version":"0.10.2","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"engines":{"node":">=0.4"},"scripts":{"test":"node ./node_modules/tad/bin/tad"},"devDependencies":{"tad":"~0.1.21"},"licence":"MIT","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.2","dist":{"shasum":"1cb2b0aefe700151c17d08db49e480a85c565568","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.2.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.3":{"name":"es5-ext","version":"0.10.3","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"~0.1.1","es6-symbol":"0.1.x"},"devDependencies":{"tad":"0.2.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad"},"licence":"MIT","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.3","dist":{"shasum":"a1c9484880ea9023e110b429f803acb491898b83","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.3.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.4":{"name":"es5-ext","version":"0.10.4","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"~0.1.1","es6-symbol":"0.1.x"},"devDependencies":{"tad":"0.2.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad"},"licence":"MIT","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.4","dist":{"shasum":"f4d7d85d45acfbe93379d4c0948fbae6466ec876","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.4.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.5":{"name":"es5-ext","version":"0.10.5","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"~0.1.2","es6-symbol":"~0.1.1"},"devDependencies":{"tad":"0.2","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.2"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"7cb71f45a4499e2426393a762f952158c3f0d50e","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.5","_shasum":"8393db0e26248dd4fbb16777cae6c51b012564fd","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"dist":{"shasum":"8393db0e26248dd4fbb16777cae6c51b012564fd","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.5.tgz"},"directories":{}},"0.10.6":{"name":"es5-ext","version":"0.10.6","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"~0.1.3","es6-symbol":"~2.0.1"},"devDependencies":{"tad":"~0.2.1","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.2"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"fd4ef2f9f4a4bb23e4479a1fb56701f49623d469","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.6","_shasum":"e27d5750401a11c08259e3b9b5d3bdd3281df00a","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.11.16","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"dist":{"shasum":"e27d5750401a11c08259e3b9b5d3bdd3281df00a","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.6.tgz"},"directories":{}},"0.10.7":{"name":"es5-ext","version":"0.10.7","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"~0.1.3","es6-symbol":"~2.0.1"},"devDependencies":{"tad":"~0.2.2","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.2"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"5b63ee02f50dfbc70dc1f62bc66b8718af443f83","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext","_id":"es5-ext@0.10.7","_shasum":"dfaea50721301042e2d89c1719d43493fa821656","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"dist":{"shasum":"dfaea50721301042e2d89c1719d43493fa821656","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.7.tgz"},"directories":{}},"0.10.8":{"name":"es5-ext","version":"0.10.8","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"2","es6-symbol":"3"},"devDependencies":{"tad":"~0.2.3","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.4"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"5da2943d75bc8f1f4e56a376f9857e751adbeb85","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext#readme","_id":"es5-ext@0.10.8","_shasum":"f48c43424fa7c7d96f903e2948705cf826f69c32","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"dist":{"shasum":"f48c43424fa7c7d96f903e2948705cf826f69c32","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.8.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.9":{"name":"es5-ext","version":"0.10.9","description":"ECMAScript 5 extensions and ES6 shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"2","es6-symbol":"~3.0.1"},"devDependencies":{"tad":"~0.2.4","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.4"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"991d894afbc2e46d5a42ab0423cb0fd5e876210b","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext#readme","_id":"es5-ext@0.10.9","_shasum":"8f261e2564761f3ae0893393497513c8958e79dd","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.0","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"dist":{"shasum":"8f261e2564761f3ae0893393497513c8958e79dd","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.9.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.10":{"name":"es5-ext","version":"0.10.10","description":"ECMAScript extensions and shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"2","es6-symbol":"~3.0.1"},"devDependencies":{"tad":"~0.2.4","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.4"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"be6cbc81f63b0892dbf6293d1f98f22e274eccd7","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext#readme","_id":"es5-ext@0.10.10","_shasum":"d486a3b451c79f9265e59d48fa6402bcb1e51c24","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.3","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"dist":{"shasum":"d486a3b451c79f9265e59d48fa6402bcb1e51c24","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.10.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.11":{"name":"es5-ext","version":"0.10.11","description":"ECMAScript extensions and shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"2","es6-symbol":"~3.0.2"},"devDependencies":{"tad":"~0.2.4","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.4"},"scripts":
4000
{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"aba94140a6bf79ce1a448a2db8834e8c1842b527","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext#readme","_id":"es5-ext@0.10.11","_shasum":"8184c3e705a820948c2dbe043849379b1dbd0c45","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.3","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"dist":{"shasum":"8184c3e705a820948c2dbe043849379b1dbd0c45","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.11.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.10.12":{"name":"es5-ext","version":"0.10.12","description":"ECMAScript extensions and shims","author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"dependencies":{"es6-iterator":"2","es6-symbol":"~3.1"},"devDependencies":{"tad":"~0.2.4","xlint":"~0.2.2","xlint-jslint-medikoo":"~0.1.4"},"scripts":{"lint":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream","lint-console":"node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch","test":"node ./node_modules/tad/bin/tad"},"license":"MIT","gitHead":"96fddc3a327b3a28b1653af9490e3b905f127fa8","bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext#readme","_id":"es5-ext@0.10.12","_shasum":"aa84641d4db76b62abba5e45fd805ecbab140047","_from":".","_npmVersion":"2.15.5","_nodeVersion":"4.4.5","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"dist":{"shasum":"aa84641d4db76b62abba5e45fd805ecbab140047","tarball":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.12.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/es5-ext-0.10.12.tgz_1467387765797_0.7073166444897652"},"directories":{}}},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"time":{"modified":"2016-07-01T15:42:48.143Z","created":"2011-05-24T12:08:10.946Z","0.1.0":"2011-05-24T12:08:13.301Z","0.2.0":"2011-05-28T19:45:11.317Z","0.2.1":"2011-05-28T19:52:12.161Z","0.3.0":"2011-06-24T16:26:12.203Z","0.4.0":"2011-07-05T19:40:10.112Z","0.5.0":"2011-07-07T19:46:31.289Z","0.5.1":"2011-07-11T19:15:11.351Z","0.6.0":"2011-08-07T13:47:11.437Z","0.6.1":"2011-08-08T14:46:02.854Z","0.6.2":"2011-08-12T11:31:10.048Z","0.6.3":"2011-12-12T13:54:08.164Z","0.7.0":"2011-12-27T12:18:08.711Z","0.7.1":"2012-05-02T20:23:44.289Z","0.8.0":"2012-05-28T14:50:28.942Z","0.8.1":"2012-06-13T13:19:03.016Z","0.8.2":"2012-06-22T11:05:51.478Z","0.9.0":"2012-09-13T12:46:16.805Z","0.9.1":"2012-09-17T11:06:05.818Z","0.9.2":"2013-03-11T15:07:30.376Z","0.10.0":"2014-02-21T17:00:15.761Z","0.10.1":"2014-04-13T13:11:02.845Z","0.10.2":"2014-04-24T15:02:40.426Z","0.10.3":"2014-04-29T18:18:10.716Z","0.10.4":"2014-04-30T20:34:00.095Z","0.10.5":"2015-01-20T09:51:46.358Z","0.10.6":"2015-02-02T12:03:48.011Z","0.10.7":"2015-04-22T09:29:59.033Z","0.10.8":"2015-10-02T13:27:00.092Z","0.10.9":"2015-12-01T09:01:59.436Z","0.10.10":"2015-12-11T13:44:52.994Z","0.10.11":"2015-12-18T11:32:38.702Z","0.10.12":"2016-07-01T15:42:48.143Z"},"author":{"name":"Mariusz Nowak","email":"medyk@medikoo.com","url":"http://www.medikoo.com/"},"repository":{"type":"git","url":"git://github.com/medikoo/es5-ext.git"},"readme":"# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, …fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([…items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([…lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.in
4000
tersection([…lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, …valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, …args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, …args)(object, …args2)  =def  object\\[name\\]\\(…args, …args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([…fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(…args)  =def  f1(f2(f3(f4(…arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([…args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(…args)(…args2)  =def  f(…args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(…args)  =def !f(…args)_\n\n#### fn.partial([…args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(…args1)(…args2)  =def  f(…args1, …args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([…values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, …sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its
2d4f
 protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, …source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([…names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, …names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([…codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, …substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/es5-ext.png)](https://travis-ci.org/medikoo/es5-ext)\n\n\t$ npm test\n","readmeFilename":"README.md","keywords":["ecmascript","ecmascript5","ecmascript6","es5","es6","extensions","ext","addons","extras","harmony","javascript","polyfill","shim","util","utils","utilities"],"bugs":{"url":"https://github.com/medikoo/es5-ext/issues"},"homepage":"https://github.com/medikoo/es5-ext#readme","users":{"mcharytoniuk":true,"goldenboy":true,"fgvutn":true,"ruchirgodura":true,"jonatasnona":true},"license":"MIT","_attachments":{}}
0

