HTTP/1.1 200 OK
Date: Fri, 14 Oct 2016 21:05:36 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d5c8f356be863d19365f3e1e41475b0f51476479136; expires=Sat, 14-Oct-17 21:05:36 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"4Q22SP3HS4G3R6QY96ZWB7W2H"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 152
X-Served-By: cache-ams4141-AMS
X-Cache: HIT
X-Cache-Hits: 2
X-Timer: S1476479136.527090,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f1dfd8b4a9a2b88-AMS

3dd0
{"_id":"jsesc","_rev":"29-559efa0b62cad62554004ccd7d75a189","name":"jsesc","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","dist-tags":{"latest":"2.2.0"},"versions":{"0.3.0":{"name":"jsesc","version":"0.3.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"http://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","tool"],"licenses":[{"type":"MIT","url":"http://mths.be/mit"}],"author":{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"},"repository":{"type":"git","url":"https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"directories":{"test":"tests"},"scripts":{"test":"node tests/tests.js"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","grunt-shell":"~0.3.1","grunt-template":"~0.2.0","istanbul":"~0.1.42","qunit-clib":"~1.3.0","qunitjs":"~1.11.0","regenerate":"~0.5.2","requirejs":"~2.1.8"},"_id":"jsesc@0.3.0","dist":{"shasum":"1bf5ee63b4539fe2e26d0c1e99c240b97a457972","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-0.3.0.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}]},"0.4.0":{"name":"jsesc","version":"0.4.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"http://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","tool"],"licenses":[{"type":"MIT","url":"http://mths.be/mit"}],"author":{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"},"repository":{"type":"git","url":"https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"directories":{"test":"tests"},"scripts":{"test":"node tests/tests.js"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","grunt-shell":"~0.3.1","grunt-template":"~0.2.0","istanbul":"~0.1.42","qunit-clib":"~1.3.0","qunitjs":"~1.11.0","regenerate":"~0.5.2","requirejs":"~2.1.8"},"_id":"jsesc@0.4.0","dist":{"shasum":"152d5de628d0d706152a1e7958da24aa5564bff6","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-0.4.0.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}]},"0.4.1":{"name":"jsesc","version":"0.4.1","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"http://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","tool"],"licenses":[{"type":"MIT","url":"http://mths.be/mit"}],"author":{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"},"repository":{"type":"git","url":"https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"directories":{"test":"tests"},"scripts":{"test":"node tests/tests.js"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","grunt-shell":"~0.3.1","grunt-template":"~0.2.0","istanbul":"~0.1.42","qunit-clib":"~1.3.0","qunitjs":"~1.11.0","regenerate":"~0.5.2","requirejs":"~2.1.8"},"_id":"jsesc@0.4.1","dist":{"shasum":"9bdd6a2e7fe16bed9308effc252c5166e1bac9f1","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-0.4.1.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}]},"0.4.2":{"name":"jsesc","version":"0.4.2","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"http://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","tool"],"licenses":[{"type":"MIT","url":"http://mths.be/mit"}],"author":{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"},"repository":{"type":"git","url":"https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"directories":{"test":"tests"},"scripts":{"test":"node tests/tests.js"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","grunt-shell":"~0.3.1","grunt-template":"~0.2.0","istanbul":"~0.1.42","qunit-clib":"~1.3.0","qunitjs":"~1.11.0","regenerate":"~0.5.2","requirejs":"~2.1.8"},"_id":"jsesc@0.4.2","dist":{"shasum":"ed2b68ec88e30e1ea57e6f6918c508c5cf41211b","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-0.4.2.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}]},"0.4.3":{"name":"jsesc","version":"0.4.3","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"http://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","tool"],"licenses":[{"type":"MIT","url":"http://mths.be/mit"}],"author":{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"},"repository":{"type":"git","url":"https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"directories":{"test":"tests"},"scripts":{"test":"node tests/tests.js"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","grunt-shell":"~0.5.0","grunt-template":"~0.2.1","istanbul":"~0.1.44","qunit-clib":"~1.3.0","qunitjs":"~1.11.0","regenerate":"~0.5.4","requirejs":"~2.1.9"},"_id":"jsesc@0.4.3","dist":{"shasum":"a9c7f90afd5a1bf2ee64df6c416dab61672d2ae9","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-0.4.3.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}]},"0.5.0":{"name":"jsesc","version":"0.5.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"http://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"licenses":[{"type":"MIT","url":"http://mths.be/mit"}],"author":{"name":"Mathias Bynens","url":"http://mathiasbynens.be/"},"repository":{"type":"git","url":"https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"directories":{"test":"tests"},"scripts":{"test":"node tests/tests.js"},"devDependencies":{"coveralls":"^2.10.0","grunt":"^0.4.5","grunt-shell":"^0.7.0","grunt-template":"^0.2.3","istanbul":"^0.3.0","qunit-extras":"^1.2.0","qunitjs":"~1.11.0","regenerate":"^0.6.2","requirejs":"^2.1.14"},"_id":"jsesc@0.5.0","_shasum":"e7dee66e35d6fc16f710fe91d5cf69f70f08911d","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"e7dee66e35d6fc16f710fe91d5cf69f70f08911d","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz"}},"1.0.0":{"name":"jsesc","version":"1.0.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"test":"node tests/tests.js","build":"grunt template"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-shell":"^1.1.2","grunt-template":"^0.2.3","istanbul":"^0.4.2","qunit-extras":"^1.4.5","qunitjs":"~1.11.0","regenerate":"^1.2.1","requirejs":"^2.1.22"},"gitHead":"740510df41cc284c051b2c799523b1cb45896614","_id":"jsesc@1.0.0","_shasum":"280d89802932b49f653a76f94bc5961aa2c2302a","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.2.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"280d89802932b49f653a76f94bc5961aa2c2302a","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-1.0.0.tgz"},"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/jsesc-1.0.0.tgz_1455887709949_0.5081199647393078"},"directories":{}},"1.1.0":{"name":"jsesc","version":"1.1.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"test":"node tests/tests.js","build":"grunt template"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-shell":"^1.1.2","grunt-template":"^0.2.3","istanbul":"^0.4.2","qunit-extras":"^1.4.5","qunitjs":"~1.11.0","regenerate":"^1.2.1","requirejs":"^2.1.22"},"gitHead":"24455b45733040b864ea19844e94e013b1e32ceb","_id":"jsesc@1.1.0","_shasum":"94dabee9b99e29de73f2b756e8d17040040070d2","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"94dabee9b99e29de73f2b756e8d17040040070d2","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-1.1.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsesc-1.1.0.tgz_1463750358068_0.5460553385782987"},"directories":{}},"1.2.0":{"name":"jsesc","version":"1.2.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"test":"node tests/tests.js","build":"grunt template"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-shell":"^1.1.2","grunt-template":"^0.2.3","istanbul":"^0.4.2","qunit-extras":"^1.4.5","qunitjs":"~1.11.0","regenerate":"^1.2.1","requirejs":"^2.1.22"},"gitHead":"f358fe9668a07a0118cfca2469f19e52986c7b40","_id":"jsesc@1.2.0","_shasum":"f43b14e9fd7f05e149ba285f3a50cea1b8e896a8","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"f43b14e9fd7f05e149ba285f3a50cea1b8e896a8","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-1.2.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsesc-1.2.0.tgz_1463823689906_0.357853488298133"},"directories":{}},"1.2.1":{"name":"jsesc","version":"1.2.1","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"test":"node tests/tests.js","build":"grunt template"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-shell":"^1.1.2","grunt-template":"^0.2.3","istanbul":"^0.4.2","qunit-extras":"^1.4.5","qunitjs":"~1.11.0","regenerate":"^1.2.1","requirejs":"^2.1.22"},"gitHead":"95a7aef13ca0e698acc378de8d204a1180551c63","_id":"jsesc@1.2.1","_shasum":"2c905f923eefcd3d75438f18287aa582527e18b8","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"2c905f923eefcd3d75438f18287aa582527e18b8","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-1.2.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jsesc-1.2.1.tgz_1464617342065_0.2549015914555639"},"directories":{}},"1.3.0":{"name":"jsesc","version":"1.3.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"test":"node tests/tests.js","build":"grunt template"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-shell":"^1.1.2","grunt-template":"^0.2.3","istanbul":"^0.4.2","qunit-extras":"^1.4.5","qunitjs":"~1.11.0","regenerate":"^1.2.1","requirejs":"^2.1.22"},"gitHead":"2c43a8a223e297155b2b2ccca344df4d6ee4233c","_id":"jsesc@1.3.0","_shasum":"46c3fec8c1892b12b0833db9bc7622176dbab34b","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"46c3fec8c1892b12b0833db9bc7622176dbab34b","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-1.3.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jsesc-1.3.0.tgz_1464619777756_0.3163749815430492"},"directories":{}},"2.0.0":{"name":"jsesc","version":"2.0.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","engines":{"node":">=4"},"main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"build":"grunt template","coveralls":"istanbul cover --verbose --dir 'coverage' 'tests/tests.js' && coveralls < coverage/lcov.info'","cover":"istanbul cover --report 'html' --verbose --dir 'coverage' 'tests/tests.js'","test":"mocha tests"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-template":"^0.2.3","istanbul":"^0.4.2","mocha":"*","regenerate":"^1
4000
.3.0","requirejs":"^2.1.22"},"gitHead":"560bdedcb75fc572a089502e4fce84f4df962691","_id":"jsesc@2.0.0","_shasum":"30b740d13321ee4c469afb9ded564763cf59c510","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"30b740d13321ee4c469afb9ded564763cf59c510","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-2.0.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsesc-2.0.0.tgz_1464648069948_0.36701208422891796"},"directories":{}},"2.1.0":{"name":"jsesc","version":"2.1.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","engines":{"node":">=4"},"main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"build":"grunt template","coveralls":"istanbul cover --verbose --dir 'coverage' 'tests/tests.js' && coveralls < coverage/lcov.info'","cover":"istanbul cover --report 'html' --verbose --dir 'coverage' 'tests/tests.js'","test":"mocha tests"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-template":"^0.2.3","istanbul":"^0.4.2","mocha":"*","regenerate":"^1.3.0","requirejs":"^2.1.22"},"gitHead":"23d911db1570dfaaaa2ab8fb631d2ff13c130dba","_id":"jsesc@2.1.0","_shasum":"62df993ba00ffb169a2a2039137e53cc276f1d50","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"62df993ba00ffb169a2a2039137e53cc276f1d50","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-2.1.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsesc-2.1.0.tgz_1464676330741_0.13891987106762826"},"directories":{}},"2.2.0":{"name":"jsesc","version":"2.2.0","description":"A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.","homepage":"https://mths.be/jsesc","engines":{"node":">=4"},"main":"jsesc.js","bin":{"jsesc":"bin/jsesc"},"man":["man/jsesc.1"],"keywords":["string","escape","javascript","tool"],"license":"MIT","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"files":["LICENSE-MIT.txt","jsesc.js","bin/","man/"],"scripts":{"build":"grunt template","coveralls":"istanbul cover --verbose --dir 'coverage' 'tests/tests.js' && coveralls < coverage/lcov.info'","cover":"istanbul cover --report 'html' --verbose --dir 'coverage' 'tests/tests.js'","test":"mocha tests"},"devDependencies":{"coveralls":"^2.11.6","grunt":"^0.4.5","grunt-template":"^0.2.3","istanbul":"^0.4.2","mocha":"*","regenerate":"^1.3.0","requirejs":"^2.1.22"},"gitHead":"30be7a62d862d8b5b49ffc4424a10c85f0ee6f6d","_id":"jsesc@2.2.0","_shasum":"c35a8613a3806c8ec3bafc0b0e196f020f7aab01","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.1.0","_npmUser":{"name":"mathias","email":"mathias@qiwi.be"},"maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"dist":{"shasum":"c35a8613a3806c8ec3bafc0b0e196f020f7aab01","tarball":"https://registry.npmjs.org/jsesc/-/jsesc-2.2.0.tgz"},"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/jsesc-2.2.0.tgz_1465308016083_0.46306405449286103"},"directories":{}}},"readme":"# jsesc [![Build status](https://travis-ci.org/mathiasbynens/jsesc.svg?branch=master)](https://travis-ci.org/mathiasbynens/jsesc) [![Code coverage status](https://coveralls.io/repos/mathiasbynens/jsesc/badge.svg)](https://coveralls.io/r/mathiasbynens/jsesc) [![Dependency status](https://gemnasium.com/mathiasbynens/jsesc.svg)](https://gemnasium.com/mathiasbynens/jsesc)\n\nThis is a JavaScript library for [escaping JavaScript strings](https://mathiasbynens.be/notes/javascript-escapes) while generating the shortest possible valid ASCII-only output. [Here’s an online demo.](https://mothereff.in/js-escapes)\n\nThis can be used to avoid [mojibake](https://en.wikipedia.org/wiki/Mojibake) and other encoding issues, or even to [avoid errors](https://twitter.com/annevk/status/380000829643571200) when passing JSON-formatted data (which may contain U+2028 LINE SEPARATOR, U+2029 PARAGRAPH SEPARATOR, or [lone surrogates](https://esdiscuss.org/topic/code-points-vs-unicode-scalar-values#content-14)) to a JavaScript parser or an UTF-8 encoder, respectively.\n\nFeel free to fork if you see possible improvements!\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install jsesc\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst jsesc = require('jsesc');\n```\n\n## API\n\n### `jsesc(value, options)`\n\nThis function takes a value and returns an escaped version of the value where any characters that are not printable ASCII symbols are escaped using the shortest possible (but valid) [escape sequences for use in JavaScript strings](https://mathiasbynens.be/notes/javascript-escapes). The first supported value type is strings:\n\n```js\njsesc('Ich ♥ Bücher');\n// → 'Ich \\\\u2665 B\\\\xFCcher'\n\njsesc('foo 𝌆 bar');\n// → 'foo \\\\uD834\\\\uDF06 bar'\n```\n\nInstead of a string, the `value` can also be an array, an object, a map, a set, or a buffer. In such cases, `jsesc` will return a stringified version of the value where any characters that are not printable ASCII symbols are escaped in the same way.\n\n```js\n// Escaping an array\njsesc([\n  'Ich ♥ Bücher', 'foo 𝌆 bar'\n]);\n// → '[\\'Ich \\\\u2665 B\\\\xFCcher\\',\\'foo \\\\uD834\\\\uDF06 bar\\']'\n\n// Escaping an object\njsesc({\n  'Ich ♥ Bücher': 'foo 𝌆 bar'\n});\n// → '{\\'Ich \\\\u2665 B\\\\xFCcher\\':\\'foo \\\\uD834\\\\uDF06 bar\\'}'\n```\n\nThe optional `options` argument accepts an object with the following options:\n\n#### `quotes`\n\nThe default value for the `quotes` option is `'single'`. This means that any occurrences of `'` in the input string will be escaped as `\\'`, so that the output can be used in a string literal wrapped in single quotes.\n\n```js\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.');\n// → 'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.'\n\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'single'\n});\n// → 'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.'\n// → \"Lorem ipsum \\\"dolor\\\" sit \\\\'amet\\\\' etc.\"\n```\n\nIf you want to use the output as part of a string literal wrapped in double quotes, set the `quotes` option to `'double'`.\n\n```js\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'double'\n});\n// → 'Lorem ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.'\n// → \"Lorem ipsum \\\\\\\"dolor\\\\\\\" sit 'amet' etc.\"\n```\n\nThis setting also affects the output for arrays and objects:\n\n```js\njsesc({ 'Ich ♥ Bücher': 'foo 𝌆 bar' }, {\n  'quotes': 'double'\n});\n// → '{\"Ich \\\\u2665 B\\\\xFCcher\":\"foo \\\\uD834\\\\uDF06 bar\"}'\n\njsesc([ 'Ich ♥ Bücher', 'foo 𝌆 bar' ], {\n  'quotes': 'double'\n});\n// → '[\"Ich \\\\u2665 B\\\\xFCcher\",\"foo \\\\uD834\\\\uDF06 bar\"]'\n```\n\n#### `numbers`\n\nThe default value for the `numbers` option is `'decimal'`. This means that any numeric values will be represented using decimal integer literals. Other valid options are `binary`, `octal`, and `hexadecimal`, which result in binary integer literals, octal integer literals, and hexadecimal integer literals, respectively.\n\n```js\njsesc(42, {\n  'numbers': 'binary'\n});\n// → '0b101010'\n\njsesc(42, {\n  'numbers': 'octal'\n});\n// → '0o52'\n\njsesc(42, {\n  'numbers': 'decimal'\n});\n// → '42'\n\njsesc(42, {\n  'numbers': 'hexadecimal'\n});\n// → '0x2A'\n```\n\n#### `wrap`\n\nThe `wrap` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, the output will be a valid JavaScript string literal wrapped in quotes. The type of quotes can be specified through the `quotes` setting.\n\n```js\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'single',\n  'wrap': true\n});\n// → '\\'Lorem ipsum \"dolor\" sit \\\\\\'amet\\\\\\' etc.\\''\n// → \"\\'Lorem ipsum \\\"dolor\\\" sit \\\\\\'amet\\\\\\' etc.\\'\"\n\njsesc('Lorem ipsum \"dolor\" sit \\'amet\\' etc.', {\n  'quotes': 'double',\n  'wrap': true\n});\n// → '\"Lorem ipsum \\\\\"dolor\\\\\" sit \\'amet\\' etc.\"'\n// → \"\\\"Lorem ipsum \\\\\\\"dolor\\\\\\\" sit \\'amet\\' etc.\\\"\"\n```\n\n#### `es6`\n\nThe `es6` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, any astral Unicode symbols in the input will be escaped using [ECMAScript 6 Unicode code point escape sequences](https://mathiasbynens.be/notes/javascript-escapes#unicode-code-point) instead of using separate escape sequences for each surrogate half. If backwards compatibility with ES5 environments is a concern, don’t enable this setting. If the `json` setting is enabled, the value for the `es6` setting is ignored (as if it was `false`).\n\n```js\n// By default, the `es6` option is disabled:\njsesc('foo 𝌆 bar 💩 baz');\n// → 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz'\n\n// To explicitly disable it:\njsesc('foo 𝌆 bar 💩 baz', {\n  'es6': false\n});\n// → 'foo \\\\uD834\\\\uDF06 bar \\\\uD83D\\\\uDCA9 baz'\n\n// To enable it:\njsesc('foo 𝌆 bar 💩 baz', {\n  'es6': true\n});\n// → 'foo \\\\u{1D306} bar \\\\u{1F4A9} baz'\n```\n\n#### `escapeEverything`\n\nThe `escapeEverything` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, all the symbols in the output will be escaped, even printable ASCII symbols.\n\n```js\njsesc('lolwat\"foo\\'bar', {\n  'escapeEverything': true\n});\n// → '\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\\\'\\\\x62\\\\x61\\\\x72'\n// → \"\\\\x6C\\\\x6F\\\\x6C\\\\x77\\\\x61\\\\x74\\\\\\\"\\\\x66\\\\x6F\\\\x6F\\\\'\\\\x62\\\\x61\\\\x72\"\n```\n\nThis setting also affects the output for arrays and objects:\n\n```js\njsesc({ 'Ich ♥ Bücher': 'foo 𝌆 bar' }, {\n  'escapeEverything': true\n});\n// → '{\\'\\x49\\x63\\x68\\x20\\u2665\\x20\\x42\\xFC\\x63\\x68\\x65\\x72\\':\\'\\x66\\x6F\\x6F\\x20\\uD834\\uDF06\\x20\\x62\\x61\\x72\\'}'\n// → \"{'\\x49\\x63\\x68\\x20\\u2665\\x20\\x42\\xFC\\x63\\x68\\x65\\x72':'\\x66\\x6F\\x6F\\x20\\uD834\\uDF06\\x20\\x62\\x61\\x72'}\"\n\njsesc([ 'Ich ♥ Bücher': 'foo 𝌆 bar' ], {\n  'escapeEverything': true\n});\n// → '[\\'\\x49\\x63\\x68\\x20\\u2665\\x20\\x42\\xFC\\x63\\x68\\x65\\x72\\',\\'\\x66\\x6F\\x6F\\x20\\uD834\\uDF06\\x20\\x62\\x61\\x72\\']'\n```\n\n#### `escapeEtago`\n\nThe `escapeEtago` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, occurrences of [`</script` and `</style`](https://mathiasbynens.be/notes/etago) in the output are escaped as `<\\/script` and `<\\/style`. This setting is useful when jsesc’s output ends up as part of a `<script>` or `<style>` element in an HTML document.\n\n```js\njsesc('foo</script>bar', {\n  'escapeEtago': true\n});\n// → 'foo<\\\\/script>bar'\n```\n\n#### `compact`\n\nThe `compact` option takes a boolean value (`true` or `false`), and defaults to `true` (enabled). When enabled, the output for arrays and objects will be as compact as possible; it won’t be formatted nicely.\n\n```js\njsesc({ 'Ich ♥ Bücher': 'foo 𝌆 bar' }, {\n  'compact': true // this is the default\n});\n// → '{\\'Ich \\u2665 B\\xFCcher\\':\\'foo \\uD834\\uDF06 bar\\'}'\n\njsesc({ 'Ich ♥ Bücher': 'foo 𝌆 bar' }, {\n  'compact': false\n});\n// → '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}'\n\njsesc([ 'Ich ♥ Bücher', 'foo 𝌆 bar' ], {\n  'compact': false\n});\n// → '[\\n\\t\\'Ich \\u2665 B\\xFCcher\\',\\n\\t\\'foo \\uD834\\uDF06 bar\\'\\n]'\n```\n\nThis setting has no effect on the output for strings.\n\n#### `indent`\n\nThe `indent` option takes a string value, and defaults to `'\\t'`. When the `compact` setting is enabled (`true`), the value of the `indent` option is used to format the output for arrays and objects.\n\n```js\njsesc({ 'Ich ♥ Bücher': 'foo 𝌆 bar' }, {\n  'compact': false,\n  'indent': '\\t' // this is the default\n});\n// → '{\\n\\t\\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}'\n\njsesc({ 'Ich ♥ Bücher': 'foo 𝌆 bar' }, {\n  'compact': false,\n  'indent': '  '\n});\n// → '{\\n  \\'Ich \\u2665 B\\xFCcher\\': \\'foo \\uD834\\uDF06 bar\\'\\n}'\n\njsesc([ 'Ich ♥ Bücher', 'foo 𝌆 bar' ], {\n  'compact': false,\n  'indent': '  '\n});\n// → '[\\n  \\'Ich \\u2665 B\\xFCcher\\',\\n\\  t\\'foo \\uD834\\uDF06 bar\\'\\n]'\n```\n\nThis setting has no effect on the output for strings.\n\n#### `indentLevel`\n\nThe `indentLevel` option takes a numeric value, and defaults to `0`. It represents the current indentation level, i.e. the number of times the value of [the `indent` option](#indent) is repeated.\n\n```js\njsesc(['a', 'b', 'c'], {\n  'compact': false,\n  'indentLevel': 1\n});\n// → '[\\n\\t\\t\\'a\\',\\n\\t\\t\\'b\\',\\n\\t\\t\\'c\\'\\n\\t]'\n\njsesc(['a', 'b', 'c'], {\n  'compact': false,\n  'indentLevel': 2\n});\n// → '[\\n\\t\\t\\t\\'a\\',\\n\\t\\t\\t\\'b\\',\\n\\t\\t\\t\\'c\\'\\n\\t\\t]'\n```\n\n#### `json`\n\nThe `json` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, the output is valid JSON. [Hexadecimal character escape sequences](https://mathiasbynens.be/notes/javascript-escapes#hexadecimal) and [the `\\v` or `\\0` escape sequences](https://mathiasbynens.be/notes/javascript-escapes#single) will not be used. Setting `json: true` implies `quotes: 'double', wrap: true, es6: false`, although these values can still be overridden if needed — but in such cases, the output won’t be valid JSON anymore.\n\n```js\njsesc('foo\\x00bar\\xFF\\uFFFDbaz', {\n  'json': true\n});\n// → '\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"'\n\njsesc({ 'foo\\x00bar\\xFF\\uFFFDbaz': 'foo\\x00bar\\xFF\\uFFFDbaz' }, {\n  'json': true\n});\n// → '{\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\":\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"}'\n\njsesc([ 'foo\\x00bar\\xFF\\uFFFDbaz', 'foo\\x00bar\\xFF\\uFFFDbaz' ], {\n  'json': true\n});\n// → '[\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\",\"foo\\\\u0000bar\\\\u00FF\\\\uFFFDbaz\"]'\n\n// Values that are acceptable in JSON but aren’t strings, arrays, or object\n// literals can’t be escaped, so they’ll just be preserved:\njsesc([ 'foo\\x00bar', [1, '©', { 'foo': true, 'qux': null }], 42 ], {\n  'json': true\n});\n// → '[\"foo\\\\u0000bar\",[1,\"\\\\u00A9\",{\"foo\":true,\"qux\":null}],42]'\n// Values that aren’t allowed in JSON are run through `JSON.stringify()`:\njsesc([ undefined, -Infinity ], {\n  'json': true\n});\n// → '[null,null]'\n```\n\n**Note:** Using this option on objects or arrays that contain non-string values relies on `JSON.stringify()`. For legacy environments like IE ≤ 7, use [a `JSON` polyfill](http://bestiejs.github.io/json3/).\n\n#### `lowercaseHex`\n\nThe `lowercaseHex` option takes a boolean value (`true` or `false`), and defaults to `false` (disabled). When enabled, any alphabetical hexadecimal digits in escape sequences as well as any hexadecimal integer literals (see [the `numbers` option](#numbers)) in the output are in lowercase.\n\n```js\njsesc('Ich ♥ Bücher', {\n  'lowercaseHex': true\n});\n// → 'Ich \\\\u2665 B\\\\xfccher'\n//                    ^^\n\njsesc(42, {\n  'numbers': 'hexadecimal',\n  'lowercaseHex': true\n});\n// → '0x2a'\n//      ^^\n```\n\n### `jsesc.version`\n\nA string representing the semantic version number.\n\n### Using the `jsesc` binary\n\nTo use the `jsesc` binary in your shell, simply install jsesc globally using npm:\n\n```bash\nnpm install -g jsesc\n```\n\nAfter that you will be able to escape strings from the co
be7
mmand line:\n\n```bash\n$ jsesc 'föo ♥ bår 𝌆 baz'\nf\\xF6o \\u2665 b\\xE5r \\uD834\\uDF06 baz\n```\n\nTo escape arrays or objects containing string values, use the `-o`/`--object` option:\n\n```bash\n$ jsesc --object '{ \"föo\": \"♥\", \"bår\": \"𝌆 baz\" }'\n{'f\\xF6o':'\\u2665','b\\xE5r':'\\uD834\\uDF06 baz'}\n```\n\nTo prettify the output in such cases, use the `-p`/`--pretty` option:\n\n```bash\n$ jsesc --pretty '{ \"föo\": \"♥\", \"bår\": \"𝌆 baz\" }'\n{\n  'f\\xF6o': '\\u2665',\n  'b\\xE5r': '\\uD834\\uDF06 baz'\n}\n```\n\nFor valid JSON output, use the `-j`/`--json` option:\n\n```bash\n$ jsesc --json --pretty '{ \"föo\": \"♥\", \"bår\": \"𝌆 baz\" }'\n{\n  \"f\\u00F6o\": \"\\u2665\",\n  \"b\\u00E5r\": \"\\uD834\\uDF06 baz\"\n}\n```\n\nRead a local JSON file, escape any non-ASCII symbols, and save the result to a new file:\n\n```bash\n$ jsesc --json --object < data-raw.json > data-escaped.json\n```\n\nOr do the same with an online JSON file:\n\n```bash\n$ curl -sL \"http://git.io/aorKgQ\" | jsesc --json --object > data-escaped.json\n```\n\nSee `jsesc --help` for the full list of options.\n\n## Support\n\nAs of v2.0.0, jsesc supports Node.js v4+ only.\n\nOlder versions (up to jsesc v1.3.0) support Chrome 27, Firefox 3, Safari 4, Opera 10, IE 6, Node.js v6.0.0, Narwhal 0.3.2, RingoJS 0.8-0.11, PhantomJS 1.9.0, and Rhino 1.7RC4. **Note:** Using the `json` option on objects or arrays that contain non-string values relies on `JSON.parse()`. For legacy environments like IE ≤ 7, use [a `JSON` polyfill](https://bestiejs.github.io/json3/).\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\nThis library is available under the [MIT](https://mths.be/mit) license.\n","maintainers":[{"name":"mathias","email":"mathias@qiwi.be"}],"time":{"modified":"2016-10-03T05:19:50.687Z","created":"2013-07-27T09:03:48.064Z","0.3.0":"2013-07-27T09:03:51.154Z","0.4.0":"2013-07-30T15:59:46.963Z","0.4.1":"2013-07-31T15:17:00.602Z","0.4.2":"2013-08-16T07:27:59.793Z","0.4.3":"2013-10-25T12:12:33.362Z","0.5.0":"2014-08-18T10:32:33.662Z","1.0.0":"2016-02-19T13:15:14.247Z","1.1.0":"2016-05-20T13:19:21.510Z","1.2.0":"2016-05-21T09:41:30.880Z","1.2.1":"2016-05-30T14:09:04.606Z","1.3.0":"2016-05-30T14:49:40.096Z","2.0.0":"2016-05-30T22:41:12.018Z","2.1.0":"2016-05-31T06:32:12.805Z","2.2.0":"2016-06-07T14:00:18.054Z"},"author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"repository":{"type":"git","url":"git+https://github.com/mathiasbynens/jsesc.git"},"homepage":"https://mths.be/jsesc","keywords":["string","escape","javascript","tool"],"bugs":{"url":"https://github.com/mathiasbynens/jsesc/issues"},"readmeFilename":"README.md","users":{"nichoth":true,"preco21":true,"wenbing":true,"quocnguyen":true,"jlertle":true,"gfilip":true,"dfrankland":true,"scottfreecode":true},"license":"MIT","_attachments":{}}
0

