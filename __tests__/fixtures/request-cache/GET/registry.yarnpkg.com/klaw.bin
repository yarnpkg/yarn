HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:46 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d0238ad5e51d3646b7c007bf2d0b3f4221476262726; expires=Thu, 12-Oct-17 08:58:46 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"612N3QA1I7A0Y8Y8NU0EPFDQH"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 130
X-Served-By: cache-lcy1125-LCY
X-Cache: HIT
X-Cache-Hits: 6
X-Timer: S1476262726.407352,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f095a180e5b3476-LHR

3dd0
{"_id":"klaw","_rev":"11-1a600bb3406722fd364eea016a35af04","name":"klaw","description":"File system walker with Readable stream interface.","dist-tags":{"latest":"1.3.0"},"versions":{"0.1.0":{"name":"klaw","version":"0.1.0","description":"File system walker with Readable stream interface.","main":"index.js","scripts":{"test":"standard && tape tests/**/*.js | faucet"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"faucet":"0.0.1","fs-extra":"^0.25.0","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"3bf5fd627e420cb51d9107caa17ddc1ce82705b6","_id":"klaw@0.1.0","_shasum":"92eeba45b679746fcb4696d2ab6aefaef6ebbb89","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"92eeba45b679746fcb4696d2ab6aefaef6ebbb89","tarball":"https://registry.npmjs.org/klaw/-/klaw-0.1.0.tgz"},"directories":{}},"1.0.0":{"name":"klaw","version":"1.0.0","description":"File system walker with Readable stream interface.","main":"index.js","scripts":{"test":"standard && tape tests/**/*.js | faucet"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"faucet":"0.0.1","fs-extra":"^0.25.0","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"3fce37834a9a82f0a682e07ed45e4eb522cc2117","_id":"klaw@1.0.0","_shasum":"fe78cb81f3de252d11be960af726a76d4b10080c","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"fe78cb81f3de252d11be960af726a76d4b10080c","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.0.0.tgz"},"directories":{}},"1.1.0":{"name":"klaw","version":"1.1.0","description":"File system walker with Readable stream interface.","main":"index.js","scripts":{"test":"standard && tape tests/**/*.js | faucet"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"faucet":"0.0.1","mkdirp":"^0.5.1","rimraf":"^2.4.3","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"2dd6e88c16838892562c0c5aafb5cb414fb48488","_id":"klaw@1.1.0","_shasum":"ca3055a687b533195fff6195767b4a913a4b94b0","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"ca3055a687b533195fff6195767b4a913a4b94b0","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.1.0.tgz"},"directories":{}},"1.1.1":{"name":"klaw","version":"1.1.1","description":"File system walker with Readable stream interface.","main":"index.js","scripts":{"test":"standard && tape tests/**/*.js | faucet"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"faucet":"0.0.1","mkdirp":"^0.5.1","rimraf":"^2.4.3","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"ae10064a3a4a4fa766e69928aff81795ad2b30a8","_id":"klaw@1.1.1","_shasum":"ac90955062b40dccc5c25567ca045f6d431210ec","_from":".","_npmVersion":"2.14.3","_nodeVersion":"4.1.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"ac90955062b40dccc5c25567ca045f6d431210ec","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.1.1.tgz"},"directories":{}},"1.1.2":{"name":"klaw","version":"1.1.2","description":"File system walker with Readable stream interface.","main":"index.js","scripts":{"test":"standard && tape tests/**/*.js | faucet"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"faucet":"0.0.1","mkdirp":"^0.5.1","rimraf":"^2.4.3","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"52226bbb1f4ed6f082adcf60b345259fc3cebeb8","_id":"klaw@1.1.2","_shasum":"3f8ea0033621e055ffc83072159efe92b7b47d26","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"3f8ea0033621e055ffc83072159efe92b7b47d26","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.1.2.tgz"},"directories":{}},"1.1.3":{"name":"klaw","version":"1.1.3","description":"File system walker with Readable stream interface.","main":"index.js","scripts":{"test":"standard && tape tests/**/*.js | faucet"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"faucet":"0.0.1","mkdirp":"^0.5.1","rimraf":"^2.4.3","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"5f26db5f6e10e13eda95eaaf0e89227f7abee64e","_id":"klaw@1.1.3","_shasum":"7da33c6b42f9b3dc9cec00d17f13af017fcc2721","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.3.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"7da33c6b42f9b3dc9cec00d17f13af017fcc2721","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.1.3.tgz"},"directories":{}},"1.2.0":{"name":"klaw","version":"1.2.0","description":"File system walker with Readable stream interface.","main":"./src/index.js","scripts":{"lint":"standard","test":"npm run lint && npm run unit","unit":"tape tests/**/*.js | tap-spec"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"mkdirp":"^0.5.1","mock-fs":"^3.8.0","rimraf":"^2.4.3","standard":"^5.3.1","tap-spec":"^4.1.1","tape":"^4.2.2"},"gitHead":"9d5a5b71a8f1bd872212cff31a6281cd82378450","_id":"klaw@1.2.0","_shasum":"db38692ddc2f5d10fa14450071dd63ab932ba2b1","_from":".","_npmVersion":"3.8.2","_nodeVersion":"5.3.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"dist":{"shasum":"db38692ddc2f5d10fa14450071dd63ab932ba2b1","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.2.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/klaw-1.2.0.tgz_1460811249600_0.7625697441399097"},"directories":{}},"1.3.0":{"name":"klaw","version":"1.3.0","description":"File system walker with Readable stream interface.","main":"./src/index.js","scripts":{"lint":"standard","test":"npm run lint && npm run unit","unit":"tape tests/**/*.js | tap-spec"},"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"keywords":["walk","walker","fs","fs-extra","readable","streams"],"author":{"name":"JP Richardson"},"license":"MIT","bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"homepage":"https://github.com/jprichardson/node-klaw#readme","devDependencies":{"mkdirp":"^0.5.1","mock-fs":"^3.8.0","rimraf":"^2.4.3","standard":"^5.3.1","tap-spec":"^4.1.1","tape":"^4.2.2"},"gitHead":"26645107af1fe05ee9ec9446eeca619dcbe0ff29","_id":"klaw@1.3.0","_shasum":"8857bfbc1d824badf13d3d0241d8bbe46fb12f73","_from":".","_npmVersion":"3.5.4","_nodeVersion":"5.3.0","_npmUser":{"name":"jprichardson","email":"jprichardson@gmail.com"},"dist":{"shasum":"8857bfbc1d824badf13d3d0241d8bbe46fb12f73","tarball":"https://registry.npmjs.org/klaw/-/klaw-1.3.0.tgz"},"maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/klaw-1.3.0.tgz_1465471482762_0.7382311346009374"},"directories":{}}},"readme":"Node.js - klaw\n==============\n\nA Node.js file system walker extracted from [fs-extra](https://github.com/jprichardson/node-fs-extra).\n\n[![npm Package](https://img.shields.io/npm/v/klaw.svg?style=flat-square)](https://www.npmjs.org/package/klaw)\n[![build status](https://api.travis-ci.org/jprichardson/node-klaw.svg)](http://travis-ci.org/jprichardson/node-klaw)\n[![windows build status](https://ci.appveyor.com/api/projects/status/github/jprichardson/node-klaw?branch=master&svg=true)](https://ci.appveyor.com/project/jprichardson/node-klaw/branch/master)\n\n<!-- [![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard) -->\n<a href=\"http://standardjs.com\"><img src=\"https://cdn.rawgit.com/feross/standard/master/sticker.svg\" alt=\"Standard\" width=\"100\"></a>\n\nInstall\n-------\n\n    npm i --save klaw\n\n\nName\n----\n\n`klaw` is `walk` backwards :p\n\n\nUsage\n-----\n\n### klaw(directory, [options])\n\nReturns a [Readable stream](https://nodejs.org/api/stream.html#stream_class_stream_readable) that iterates\nthrough every file and directory starting with `dir` as the root. Every `read()` or `data` event\nreturns an object with two properties: `path` and `stats`. `path` is the full path of the file and\n`stats` is an instance of [fs.Stats](https://nodejs.org/api/fs.html#fs_class_fs_stats).\n\n- `directory`: The directory to recursively walk. Type `string`.\n- `options`: [Readable stream options](https://nodejs.org/api/stream.html#stream_new_stream_readable_options) and\nthe following:\n  - `queueMethod` (`string`, default: `'shift'`): Either `'shift'` or `'pop'`. On `readdir()` array, call either `shift()` or `pop()`.\n  - `pathSorter` (`function`, default: `undefined`): Sorting [function for Arrays](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort).\n  - `fs` (`object`, default: `require('fs')`): Use this to hook into the `fs` methods or to use [`mock-fs`](https://github.com/tschaub/mock-fs)\n  - `filter` (`function`, default: `undefined`): Filtering [function for Arrays](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n\n**Streams 1 (push) example:**\n\n```js\nvar klaw = require('klaw')\n\nvar items = [] // files, directories, symlinks, etc\nklaw('/some/dir')\n  .on('data', function (item) {\n    items.push(item.path)\n  })\n  .on('end', function () {\n    console.dir(items) // => [ ... array of files]\n  })\n```\n\n**Streams 2 & 3 (pull) example:**\n\n```js\nvar klaw = require('klaw')\n\nvar items = [] // files, directories, symlinks, etc\nklaw('/some/dir')\n  .on('readable', function () {\n    var item\n    while ((item = this.read())) {\n      items.push(item.path)\n    }\n  })\n  .on('end', function () {\n    console.dir(items) // => [ ... array of files]\n  })\n```\n\nIf you're not sure of the differences on Node.js streams 1, 2, 3 then I'd\nrecommend this resource as a good starting point: https://strongloop.com/strongblog/whats-new-io-js-beta-streams3/.\n\n\n### Error Handling\n\nListen for the `error` event.\n\nExample:\n\n```js\nvar klaw = require('klaw')\nklaw('/some/dir')\n  .on('readable', function () {\n    var item\n    while ((item = this.read())) {\n      // do something with the file\n    }\n  })\n  .on('error', function (err, item) {\n    console.log(err.message)\n    console.log(item.path) // the file the error occurred on\n  })\n  .on('end', function () {\n    console.dir(items) // => [ ... array of files]\n  })\n\n```\n\n\n### Aggregation / Filtering / Executing Actions (Through Streams)\n\nOn many occasions you may want to filter files based upon size, extension, etc.\nOr you may want to aggregate stats on certain file types. Or maybe you want to\nperform an action on certain file types.\n\nYou should use the module [`through2`](https://www.npmjs.com/package/through2) to easily\naccomplish this.\n\nInstall `through2`:\n\n    npm i --save through2\n\n\n**Example (skipping directories):**\n\n```js\nvar klaw = require('klaw')\nvar through2 = require('through2')\n\nvar excludeDirFilter = through2.obj(function (item, enc, next) {\n  if (!item.stats.isDirectory()) this.push(item)\n  next()\n})\n\nvar items = [] // files, directories, symlinks, etc\nklaw('/some/dir')\n  .pipe(excludeDirFilter)\n  .on('data', function (item) {\n    items.push(item.path)\n  })\n  .on('end', function () {\n    console.dir(items) // => [ ... array of files without directories]\n  })\n\n```\n**Example (ignore hidden directories):**\n```js\nvar klaw = require('klaw')\nvar path = require('path')\n\nvar filterFunc = function(item){\n  var basename = path.basename(item)\n  return basename === '.' || basename[0] !== '.'\n}\n\nklaw('/some/dir', { filter : filterFunc  })\n  .on('data', function(item){\n    // only items of none hidden folders will reach here\n  })\n    \n```\n\n**Example (totaling size of PNG files):**\n\n```js\nvar klaw = require('klaw')\nvar path = require('path')\nvar through2 = require('through2')\n\nvar totalPngsInBytes = 0\nvar aggregatePngSize = through2.obj(function (item, enc, next) {\n  if (path.extname(item.path) === '.png') {\n    totalPngsInBytes += item.stats.size\n  }\n  this.push(item)\n  next()\n})\n\nklaw('/some/dir')\n  .pipe(aggregatePngSize)\n  .on('data', function (item) {\n    items.push(item.path)\n  })\n  .on('end', function () {\n    console.dir(totalPngsInBytes) // => total of all pngs (bytes)\n  })\n```\n\n\n**Example (deleting all .tmp files):**\n\n```js\nvar fs = require('fs')\nvar klaw = require('klaw')\nvar through2 = require('through2')\n\nvar deleteAction = through2.obj(function (item, enc, next) {\n  this.push(item)\n\n  if (path.extname(item.path) === '.tmp') {\n    item.deleted = true\n    fs.unklink(item.path, next)\n  } else {\n    item.deleted = false\n    next()\n  }  \n})\n\nvar deletedFiles = []\nklaw('/some/dir')\n  .pipe(deleteAction)\n  .on('data', function (item) {\n    if (!item.deleted) return\n    deletedFiles.push(item.path)\n  })\n  .on('end', function () {\n    console.dir(deletedFiles) // => all deleted files\n  })\n```\n\nYou can even chain a bunch of these filters and aggregators together. By using\nmultiple pipes.\n\n**Example (using multiple filters / aggregators):**\n\n```js\nklaw('/some/dir')\n  .pipe(filterCertainFiles)\n  .pipe(deleteSomeOtherFiles)\n  .on('end', function () {\n    console.log('all done!')\n  })\n```\n\n**Example passing (piping) through errors:**\n\nNode.js does not `pi
75e
pe()` errors. This means that the error on one stream, like\n`klaw` will not pipe through to the next. If you want to do this, do the following:\n\n```js\nvar klaw = require('klaw')\nvar through2 = require('through2')\n\nvar excludeDirFilter = through2.obj(function (item, enc, next) {\n  if (!item.stats.isDirectory()) this.push(item)\n  next()\n})\n\nvar items = [] // files, directories, symlinks, etc\nklaw('/some/dir')\n  .on('error', function (err) { excludeDirFilter.emit('error', err) }) // forward the error on\n  .pipe(excludeDirFilter)\n  .on('data', function (item) {\n    items.push(item.path)\n  })\n  .on('end', function () {\n    console.dir(items) // => [ ... array of files without directories]\n  })\n```\n\n\n### Searching Strategy\n\nPass in options for `queueMethod` and `pathSorter` to affect how the file system\nis recursively iterated. See the code for more details, it's less than 50 lines :)\n\n\n\nLicense\n-------\n\nMIT\n\nCopyright (c) 2015 [JP Richardson](https://github.com/jprichardson)\n","maintainers":[{"name":"jprichardson","email":"jprichardson@gmail.com"}],"time":{"modified":"2016-06-09T11:24:45.183Z","created":"2015-10-25T14:25:32.957Z","0.1.0":"2015-10-25T14:25:32.957Z","1.0.0":"2015-10-25T15:22:16.827Z","1.1.0":"2015-10-25T19:09:38.222Z","1.1.1":"2015-10-25T19:37:47.336Z","1.1.2":"2015-11-12T15:32:44.149Z","1.1.3":"2015-12-23T22:58:50.062Z","1.2.0":"2016-04-16T12:54:12.167Z","1.3.0":"2016-06-09T11:24:45.183Z"},"homepage":"https://github.com/jprichardson/node-klaw#readme","keywords":["walk","walker","fs","fs-extra","readable","streams"],"repository":{"type":"git","url":"git+https://github.com/jprichardson/node-klaw.git"},"author":{"name":"JP Richardson"},"bugs":{"url":"https://github.com/jprichardson/node-klaw/issues"},"license":"MIT","readmeFilename":"README.md","users":{"davidbraun":true,"coolhanddev":true},"_attachments":{}}
0

