HTTP/1.1 200 OK
Date: Wed, 12 Oct 2016 08:58:39 GMT
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Set-Cookie: __cfduid=d2fa197edb79c9cb25c029cf72ddba27a1476262719; expires=Thu, 12-Oct-17 08:58:39 GMT; path=/; domain=.yarnpkg.com; HttpOnly
etag: W/"1RIZKP9C55EAMVIA96DZTOTYG"
Cache-Control: max-age=300
Via: 1.1 varnish
Age: 210
X-Served-By: cache-lcy1123-LCY
X-Cache: HIT
X-Cache-Hits: 5
X-Timer: S1476262719.377063,VS0,VE0
Vary: Accept-Encoding
Server: cloudflare-nginx
CF-RAY: 2f0959ec1e3106fa-LHR

3dd0
{"_id":"orchestrator","_rev":"80-c50f6fb835a326c78a3a5b12fb2d7770","name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","dist-tags":{"latest":"0.3.7"},"versions":{"0.0.2":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.2","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"event-stream":"3.0.16"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.2","dist":{"shasum":"0600ef0311d994a125cea5a6362473df6637e8f2","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.2.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.0.3":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.3","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"event-stream":"3.0.16"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.3","dist":{"shasum":"4e3c779701e0af64575a266c0da8e93a6497f07d","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.3.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.0.4":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.4","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"arranger":"~0.0.4"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.4","dist":{"shasum":"2a0ae5741900b45e21b593fb9146b248a6a2adb1","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.4.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.0.5":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.5","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"sequencify":"~0.0.5","events":"~0.5.0"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.5","dist":{"shasum":"719bc5535ef3c9869a641484cebf40c32c304e65","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.5.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.0.6":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.6","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"sequencify":"~0.0.5","events":"~0.5.0"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.6","dist":{"shasum":"9f131aa701375cf931155c1508b8e54a24d6815f","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.6.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.0.7":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.7","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"sequencify":"~0.0.5","events":"~0.5.0"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.7","dist":{"shasum":"d40da8f4ab7df45ad4d2650fafa57c1a0e726a68","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.7.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.0.8":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.0.8","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"sequencify":"~0.0.5","events":"~0.5.0"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.0.8","dist":{"shasum":"7af11d266033dbf08c6d903027386642d32e8a71","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.0.8.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.1.0":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.1.0","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"sequencify":"~0.0.5","events":"~0.5.0"},"devDependencies":{"mocha":"~1.13.0","should":"~2.0.1","q":"~0.9.7","event-stream":"~3.0.16"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.1.0","dist":{"shasum":"12aed2d4df9bfa1a5ae56791fc31db28d2d03ebf","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.1.0.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.2.0":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.2.0","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"execify":"0.0.1","sequencify":"0.0.5","events":"0.5.0"},"devDependencies":{"mocha":"~1.15.1","should":"~2.1.1","q":"~0.9.7","event-stream":"~3.0.18"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.2.0","dist":{"shasum":"67d4e6efaa829d453e5bfce2adeb429aac7deeea","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.2.0.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.2.1":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.2.1","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"execify":"~0.0.1","sequencify":"~0.0.5","events":"~0.5.0"},"devDependencies":{"mocha":"~1.15.1","should":"~2.1.1","q":"~0.9.7","event-stream":"~3.0.18"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.2.1","dist":{"shasum":"6d1765213be21372acc81e6826402330c2a4c602","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.2.1.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.3.0":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.0","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"execify":"~0.0.1","sequencify":"~0.0.7","events":"~1.0.0"},"devDependencies":{"mocha":"~1.16.1","should":"~2.1.1","q":"~0.9.7","event-stream":"~3.0.18"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.0","dist":{"shasum":"5fd3f598f25e42a3ff6cce067c1eaef94d658dc5","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.3.1":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.1","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"execify":"~0.0.3","sequencify":"~0.0.7"},"devDependencies":{"mocha":"~1.16.1","should":"~2.1.1","q":"~0.9.7","map-stream":"~0.0.4","event-stream":"~3.0.20"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.1","dist":{"shasum":"61725cd3d97d13927aa9f9c6d97c3474986599f7","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.1.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.3.3":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.3","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"sequencify":"~0.0.7"},"devDependencies":{"mocha":"~1.17.0","should":"~2.1.1","q":"~1.0.0","event-stream":"~3.1.0","map-stream":"~0.1.0"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.3","dist":{"shasum":"308f80c6c956b3c27f6e4f98d28653fa872e6941","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.3.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"directories":{}},"0.3.4":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.4","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"end-of-stream":"~0.1.5","sequencify":"~0.0.7"},"devDependencies":{"mocha":"~1.17.0","should":"~3.0.1","q":"~1.0.0","event-stream":"~3.1.0","map-stream":"~0.1.0"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"gitHead":"fb29a8ac3909608d586131678495e544afabb5a3","bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.4","_shasum":"fafb1bca8945e158948c1cf96fcfa2ccb7931841","_from":".","_npmVersion":"1.4.15","_npmUser":{"name":"robrich","email":"robrich@robrich.org"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"dist":{"shasum":"fafb1bca8945e158948c1cf96fcfa2ccb7931841","tarball":"https://registry.npmjs.o
37b2
rg/orchestrator/-/orchestrator-0.3.4.tgz"},"directories":{}},"0.3.5":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.5","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"end-of-stream":"~0.1.5","sequencify":"~0.0.7"},"devDependencies":{"mocha":"~1.17.0","should":"~3.0.1","q":"~1.0.0","event-stream":"~3.1.0","map-stream":"~0.1.0"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"gitHead":"72b7e1dd2782a3000e444173e1dec7cf9d65afa9","bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.5","_shasum":"e1b690e3d7ec484edaade9d4babdf9c1db41c4d7","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"phated","email":"blaine@iceddev.com"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"},{"name":"phated","email":"blaine@iceddev.com"},{"name":"contra","email":"contra@wearefractal.com"}],"dist":{"shasum":"e1b690e3d7ec484edaade9d4babdf9c1db41c4d7","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.5.tgz"},"directories":{}},"0.3.6":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.6","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"end-of-stream":"~0.1.5","sequencify":"~0.0.7"},"devDependencies":{"event-stream":"~3.1.5","gulp-jshint":"~1.6.3","map-stream":"~0.1.0","merge-stream":"~0.1.2","mocha":"~1.17.0","q":"~1.0.0","should":"~3.0.1","vinyl-fs":"~0.3.4"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"gitHead":"18831d3db0448910d49208d790256dc879b8e9e6","bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.6","_shasum":"1fc5694c0edabd1357569270bb771f48390ee1d0","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"phated","email":"blaine@iceddev.com"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"},{"name":"phated","email":"blaine@iceddev.com"},{"name":"contra","email":"contra@wearefractal.com"}],"dist":{"shasum":"1fc5694c0edabd1357569270bb771f48390ee1d0","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.6.tgz"},"directories":{}},"0.3.7":{"name":"orchestrator","description":"A module for sequencing and executing tasks and dependencies in maximum concurrency","version":"0.3.7","homepage":"https://github.com/robrich/orchestrator","repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"main":"./index.js","keywords":["async","task","parallel","compose"],"dependencies":{"end-of-stream":"~0.1.5","sequencify":"~0.0.7","stream-consume":"~0.1.0"},"devDependencies":{"event-stream":"~3.1.5","gulp-jshint":"~1.6.3","map-stream":"~0.1.0","merge-stream":"~0.1.2","mocha":"~1.17.0","q":"~1.0.0","should":"~3.0.1","vinyl-fs":"~0.3.4"},"scripts":{"test":"mocha"},"engines":{"node":">= 0.8"},"licenses":[{"type":"MIT","url":"http://github.com/robrich/orchestrator/raw/master/LICENSE"}],"gitHead":"f3fcb93e3560afd0bc0c4acd5c5db7bd109414e7","bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"_id":"orchestrator@0.3.7","_shasum":"c45064e22c5a2a7b99734f409a95ffedc7d3c3df","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"phated","email":"blaine@iceddev.com"},"maintainers":[{"name":"robrich","email":"robrich@robrich.org"},{"name":"phated","email":"blaine@iceddev.com"},{"name":"contra","email":"contra@wearefractal.com"}],"dist":{"shasum":"c45064e22c5a2a7b99734f409a95ffedc7d3c3df","tarball":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.7.tgz"},"directories":{}}},"readme":"[![Build Status](https://secure.travis-ci.org/orchestrator/orchestrator.svg?branch=master)](https://travis-ci.org/orchestrator/orchestrator)\n[![Dependency Status](https://david-dm.org/orchestrator/orchestrator.svg)](https://david-dm.org/orchestrator/orchestrator)\n\nOrchestrator\n============\n\nA module for sequencing and executing tasks and dependencies in maximum concurrency\n\nUsage\n-----\n\n### 1. Get a reference:\n\n```javascript\nvar Orchestrator = require('orchestrator');\nvar orchestrator = new Orchestrator();\n```\n\n### 2. Load it up with stuff to do:\n\n```javascript\norchestrator.add('thing1', function(){\n  // do stuff\n});\norchestrator.add('thing2', function(){\n  // do stuff\n});\n```\n\n### 3. Run the tasks:\n\n```javascript\norchestrator.start('thing1', 'thing2', function (err) {\n  // all done\n});\n```\n\nAPI\n---\n\n### orchestrator.add(name[, deps][, function]);\n\nDefine a task\n\n```javascript\norchestrator.add('thing1', function(){\n  // do stuff\n});\n```\n\n#### name\nType: `String`\n\nThe name of the task.\n\n#### deps\nType: `Array`\n\nAn array of task names to be executed and completed before your task will run.\n\n```javascript\norchestrator.add('mytask', ['array', 'of', 'task', 'names'], function() {\n  // Do stuff\n});\n```\n\n**Note:** Are your tasks running before the dependencies are complete?  Make sure your dependency tasks\nare correctly using the async run hints: take in a callback or return a promise or event stream.\n\n#### fn\nType: `function`\n\nThe function that performs the task's operations.  For asynchronous tasks, you need to provide a hint when the task is complete:\n\n- Take in a callback\n- Return a stream or a promise\n\n#### examples:\n\n**Accept a callback:**\n\n```javascript\norchestrator.add('thing2', function(callback){\n  // do stuff\n  callback(err);\n});\n```\n\n**Return a promise:**\n\n```javascript\nvar Q = require('q');\n\norchestrator.add('thing3', function(){\n  var deferred = Q.defer();\n\n  // do async stuff\n  setTimeout(function () {\n    deferred.resolve();\n  }, 1);\n\n  return deferred.promise;\n});\n```\n\n**Return a stream:** (task is marked complete when stream ends)\n\n```javascript\nvar map = require('map-stream');\n\norchestrator.add('thing4', function(){\n  var stream = map(function (args, cb) {\n    cb(null, args);\n  });\n  // do stream stuff\n  return stream;\n});\n```\n\n**Note:** By default, tasks run with maximum concurrency -- e.g. it launches all the tasks at once and waits for nothing.\nIf you want to create a series where tasks run in a particular order, you need to do two things:\n\n- give it a hint to tell it when the task is done,\n- and give it a hint that a task depends on completion of another.\n\nFor these examples, let's presume you have two tasks, \"one\" and \"two\" that you specifically want to run in this order:\n\n1. In task \"one\" you add a hint to tell it when the task is done.  Either take in a callback and call it when you're\ndone or return a promise or stream that the engine should wait to resolve or end respectively.\n\n2. In task \"two\" you add a hint telling the engine that it depends on completion of the first task.\n\nSo this example would look like this:\n\n```javascript\nvar Orchestrator = require('orchestrator');\nvar orchestrator = new Orchestrator();\n\n// takes in a callback so the engine knows when it'll be done\norchestrator.add('one', function (cb) {\n    // do stuff -- async or otherwise\n    cb(err); // if err is not null or undefined, the orchestration will stop, and note that it failed\n});\n\n// identifies a dependent task must be complete before this one begins\norchestrator.add('two', ['one'], function () {\n    // task 'one' is done now\n});\n\norchestrator.start('one', 'two');\n```\n\n### orchestrator.hasTask(name);\n\nHave you defined a task with this name?\n\n#### name\nType: `String`\n\nThe task name to query\n\n### orchestrator.start(tasks...[, cb]);\n\nStart running the tasks\n\n#### tasks\nType: `String` or `Array` of `String`s\n\nTasks to be executed. You may pass any number of tasks as individual arguments.\n\n#### cb\nType: `function`: `function (err) {`\n\nCallback to call after run completed.\n\nPasses single argument: `err`: did the orchestration succeed?\n\n**Note:** Tasks run concurrently and therefore may not complete in order.\n**Note:** Orchestrator uses `sequencify` to resolve dependencies before running, and therefore may not start in order.\nListen to orchestration events to watch task running.\n\n```javascript\norchestrator.start('thing1', 'thing2', 'thing3', 'thing4', function (err) {\n  // all done\n});\n```\n```javascript\norchestrator.start(['thing1','thing2'], ['thing3','thing4']);\n```\n\n**FRAGILE:** Orchestrator catches exceptions on sync runs to pass to your callback\nbut doesn't hook to process.uncaughtException so it can't pass those exceptions\nto your callback\n\n**FRAGILE:** Orchestrator will ensure each task and each dependency is run once during an orchestration run\neven if you specify it to run more than once. (e.g. `orchestrator.start('thing1', 'thing1')`\nwill only run 'thing1' once.) If you need it to run a task multiple times, wait for\nthe orchestration to end (start's callback) then call start again.\n(e.g. `orchestrator.start('thing1', function () {orchestrator.start('thing1');})`.)\nAlternatively create a second orchestrator instance.\n\n### orchestrator.stop()\n\nStop an orchestration run currently in process\n\n**Note:** It will call the `start()` callback with an `err` noting the orchestration was aborted\n\n### orchestrator.on(event, cb);\n\nListen to orchestrator internals\n\n#### event\nType: `String`\n\nEvent name to listen to:\n- start: from start() method, shows you the task sequence\n- stop: from stop() method, the queue finished successfully\n- err: from stop() method, the queue was aborted due to a task error\n- task_start: from _runTask() method, task was started\n- task_stop: from _runTask() method, task completed successfully\n- task_err: from _runTask() method, task errored\n- task_not_found: from start() method, you're trying to start a task that doesn't exist\n- task_recursion: from start() method, there are recursive dependencies in your task list\n\n#### cb\nType: `function`: `function (e) {`\n\nPasses single argument: `e`: event details\n\n```javascript\norchestrator.on('task_start', function (e) {\n  // e.message is the log message\n  // e.task is the task name if the message applies to a task else `undefined`\n  // e.err is the error if event is 'err' else `undefined`\n});\n// for task_end and task_err:\norchestrator.on('task_stop', function (e) {\n  // e is the same object from task_start\n  // e.message is updated to show how the task ended\n  // e.duration is the task run duration (in seconds)\n});\n```\n\n**Note:** fires either *stop or *err but not both.\n\n### orchestrator.onAll(cb);\n\nListen to all orchestrator events from one callback\n\n#### cb\nType: `function`: `function (e) {`\n\nPasses single argument: `e`: event details\n\n```javascript\norchestrator.onAll(function (e) {\n  // e is the original event args\n  // e.src is event name\n});\n```\n\nLICENSE\n-------\n\n(MIT License)\n\nCopyright (c) 2013 [Richardson & Sons, LLC](http://richardsonandsons.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","maintainers":[{"name":"robrich","email":"robrich@robrich.org"}],"time":{"modified":"2016-02-02T03:46:47.738Z","created":"2013-10-18T19:28:52.558Z","0.0.2":"2013-10-18T19:28:53.939Z","0.0.3":"2013-10-18T22:32:49.258Z","0.0.4":"2013-10-18T23:59:44.403Z","0.0.5":"2013-10-21T18:56:56.891Z","0.0.6":"2013-10-24T18:44:08.737Z","0.0.7":"2013-11-04T16:04:45.568Z","0.0.8":"2013-11-07T18:48:29.653Z","0.0.9":"2013-11-19T17:32:43.950Z","0.1.0":"2013-11-19T17:56:32.874Z","0.2.0":"2013-12-06T22:56:42.746Z","0.2.1":"2013-12-15T06:36:18.194Z","0.3.0":"2013-12-23T07:27:08.100Z","0.3.1":"2014-01-03T21:08:45.954Z","0.3.2":"2014-01-12T03:21:38.618Z","0.3.3":"2014-01-13T05:47:50.929Z","0.3.4":"2014-06-30T21:55:26.123Z","0.3.5":"2014-07-01T03:04:08.469Z","0.3.6":"2014-07-01T17:30:02.132Z","0.3.7":"2014-07-22T07:09:14.442Z"},"author":{"name":"Rob Richardson","url":"http://robrich.org/"},"repository":{"type":"git","url":"git://github.com/robrich/orchestrator.git"},"users":{"nechtan":true,"operandom":true,"tunnckocore":true,"fmanikis":true,"antaranian":true,"xenomuta":true,"stringparser":true,"gtg092x":true,"carlosmarte":true,"jeltok":true,"schahriar":true,"gchudnov":true,"simplyianm":true,"ndaidong":true,"dongxu":true,"awen1983":true,"preflight":true,"jessaustin":true,"fotooo":true,"stany":true,"goliatone":true,"joelwallis":true,"itonyyo":true,"yedaodao":true,"ziflex":true,"abdihaikal":true,"nuer":true},"homepage":"https://github.com/robrich/orchestrator","keywords":["async","task","parallel","compose"],"bugs":{"url":"https://github.com/robrich/orchestrator/issues"},"readmeFilename":"README.md","_attachments":{}}
0

