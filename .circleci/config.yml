version: 2

defaults: &defaults
  docker:
    - image: yarnpkg/dev:latest
  working_directory: ~/project/yarn

attach_workspace: &attach_workspace
  attach_workspace:
      at: ~/project

restore_cache: &restore_cache
  restore_cache:
    name: Restore node_modules cache
    keys:
      - v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-node-{{ .Branch }}-
      - v1-node-

test_steps: &test_steps
  steps:
    - *attach_workspace
    - *restore_cache
    - run:
        name: Build Yarn for testing
        command: |
          if [ "$CIRCLE_BRANCH" == 'master' ]; then
            ./scripts/set-dev-version.js
          fi;
          yarn build
    - run:
        name: Tests
        command: |
          # Limit maxWorkers to 3 to avoid OOM on CircleCI
          yarn test-only --maxWorkers 3

default_filters: &default_filters
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn cache
          key: v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - .cache/yarn
      - save_cache:
          name: Save node_modules cache
          key: v1-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          name: Remove node_modules to cleanup workspace
          command: rm -r node_modules/
      - persist_to_workspace:
          root: ~/project
          paths:
            - yarn
  lint:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Lint
          command: yarn lint
  build:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Build distribution
          command: |
            if [ "$CIRCLE_BRANCH" == 'master' ]; then
              ./scripts/set-dev-version.js
            fi;
            yarn build-dist
            ./scripts/build-deb.sh
      - store_artifacts:
          path: artifacts/
          destination: yarnpkg
      - persist_to_workspace:
          root: ~/project
          paths:
            - yarn
  test-node8:
    <<: *defaults
    <<: *test_steps
  test-node6:
    <<: *defaults
    docker:
      - image: node:6
    <<: *test_steps
  test-node4:
    <<: *defaults
    docker:
      - image: node:4
    <<: *test_steps
  publish:
    <<: *defaults
    steps:
      - *attach_workspace
      - *restore_cache
      - run:
          name: Publish
          command: |
            # Only NPM is handled here - All other release files are handled in a webhook.
            if [ "${CIRCLE_PROJECT_USERNAME}" == "yarnpkg" ]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
              ./scripts/update-npm.sh
            fi

notify:
  webhooks:
    # Handles uploading stable/RC releases to GitHub
    - url: https://nightly.yarnpkg.com/release_circleci
    # Handles archiving all builds onto the nightly build site
    - url: https://nightly.yarnpkg.com/archive_circleci

workflows:
  version: 2
  install-test-build-and-publish:
    jobs:
      - install:
          filters: *default_filters
      - lint:
          filters: *default_filters
          requires:
            - install
      - test-node8:
          filters: *default_filters
          requires:
            - install
      - test-node6:
          filters: *default_filters
          requires:
            - install
      - test-node4:
          filters: *default_filters
          requires:
            - install
      - build:
          filters: *default_filters
          requires:
            - install
      - publish:
          filters:
            <<: *default_filters
            branches:
              ignore: /.*/
          requires:
            - test-node8
            - test-node6
            - test-node4
            - lint
            - build
